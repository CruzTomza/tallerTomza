[{"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\index.jsx":"1","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\App.jsx":"2","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\Header.js":"3","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\env\\environment.js":"4","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\pages\\MenuPage.jsx":"5","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\pages\\NotFoundPage.jsx":"6","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\pages\\Login.jsx":"7","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\Combustible.jsx":"8","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\Camion.jsx":"9","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\Mantenimiento.jsx":"10","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\CambioAceite.jsx":"11","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\Reparacion.jsx":"12","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\CombuGas.jsx":"13","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\CombuSuper.jsx":"14","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\pages\\Error.jsx":"15","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\MantenimientoLista.jsx":"16","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\CambioALista.jsx":"17","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\ReparacionLista.jsx":"18","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\SuperGasLista.jsx":"19","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\GasTomzaLista.jsx":"20","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\index.jsx":"21","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\App.jsx":"22","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\Header.js":"23","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\env\\environment.js":"24","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\pages\\NotFoundPage.jsx":"25","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\pages\\MenuPage.jsx":"26","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\Camion.jsx":"27","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\pages\\Login.jsx":"28","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\Mantenimiento.jsx":"29","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\Combustible.jsx":"30","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\CambioAceite.jsx":"31","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\Reparacion.jsx":"32","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\CombuGas.jsx":"33","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\CombuSuper.jsx":"34","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\pages\\Error.jsx":"35","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\MantenimientoLista.jsx":"36","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\CambioALista.jsx":"37","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\ReparacionLista.jsx":"38","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\GasTomzaLista.jsx":"39","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\SuperGasLista.jsx":"40","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\Table.jsx":"41"},{"size":150,"mtime":1626971654975,"results":"42","hashOfConfig":"43"},{"size":3550,"mtime":1626971654965,"results":"44","hashOfConfig":"43"},{"size":423,"mtime":1626971654966,"results":"45","hashOfConfig":"43"},{"size":221,"mtime":1627050809311,"results":"46","hashOfConfig":"43"},{"size":2221,"mtime":1626971654978,"results":"47","hashOfConfig":"43"},{"size":306,"mtime":1626971654978,"results":"48","hashOfConfig":"43"},{"size":3632,"mtime":1626973451262,"results":"49","hashOfConfig":"43"},{"size":2432,"mtime":1626971654970,"results":"50","hashOfConfig":"43"},{"size":5105,"mtime":1626971654968,"results":"51","hashOfConfig":"43"},{"size":3588,"mtime":1626971654972,"results":"52","hashOfConfig":"43"},{"size":11565,"mtime":1626971654968,"results":"53","hashOfConfig":"43"},{"size":9585,"mtime":1626971654973,"results":"54","hashOfConfig":"43"},{"size":21214,"mtime":1626971654969,"results":"55","hashOfConfig":"43"},{"size":20823,"mtime":1626971654970,"results":"56","hashOfConfig":"43"},{"size":203,"mtime":1626971654977,"results":"57","hashOfConfig":"43"},{"size":1917,"mtime":1626971654972,"results":"58","hashOfConfig":"43"},{"size":6435,"mtime":1626971654967,"results":"59","hashOfConfig":"43"},{"size":5342,"mtime":1626971654974,"results":"60","hashOfConfig":"43"},{"size":727,"mtime":1626971654974,"results":"61","hashOfConfig":"43"},{"size":727,"mtime":1626971654971,"results":"62","hashOfConfig":"43"},{"size":150,"mtime":1627408918544,"results":"63","hashOfConfig":"64"},{"size":3550,"mtime":1627408918528,"results":"65","hashOfConfig":"64"},{"size":423,"mtime":1627408918528,"results":"66","hashOfConfig":"64"},{"size":218,"mtime":1627409091035,"results":"67","hashOfConfig":"64"},{"size":306,"mtime":1627408918544,"results":"68","hashOfConfig":"64"},{"size":2221,"mtime":1627408918544,"results":"69","hashOfConfig":"64"},{"size":5110,"mtime":1627409091014,"results":"70","hashOfConfig":"64"},{"size":3632,"mtime":1627409218823,"results":"71","hashOfConfig":"64"},{"size":3668,"mtime":1627409091019,"results":"72","hashOfConfig":"64"},{"size":2432,"mtime":1627408918544,"results":"73","hashOfConfig":"64"},{"size":11625,"mtime":1627409091013,"results":"74","hashOfConfig":"64"},{"size":11260,"mtime":1627409091021,"results":"75","hashOfConfig":"64"},{"size":18258,"mtime":1627409091017,"results":"76","hashOfConfig":"64"},{"size":20888,"mtime":1627409091018,"results":"77","hashOfConfig":"64"},{"size":203,"mtime":1627408918544,"results":"78","hashOfConfig":"64"},{"size":1914,"mtime":1627409091020,"results":"79","hashOfConfig":"64"},{"size":6435,"mtime":1627408918544,"results":"80","hashOfConfig":"64"},{"size":5142,"mtime":1627409198909,"results":"81","hashOfConfig":"64"},{"size":727,"mtime":1627408918544,"results":"82","hashOfConfig":"64"},{"size":727,"mtime":1627408918544,"results":"83","hashOfConfig":"64"},{"size":2544,"mtime":1627409091022,"results":"84","hashOfConfig":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"fjecme",{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"87"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"87"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"87"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"87"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"87"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"18ne52x",{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"138"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"138"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"138"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\index.jsx",[],["187","188"],"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\App.jsx",["189"],"import React, {useState, useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport environment from './env/environment'\r\n// import \"./App.css\";\r\nimport 'bootswatch/dist/united/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from './Header'\r\nimport MenuPage from './pages/MenuPage'\r\nimport Reparacion from './components/Reparacion'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\nimport LoginUser from './pages/Login'\r\nimport CambioAceite from './components/CambioAceite'\r\nimport Mantenimiento from './components/Mantenimiento'\r\nimport AgregarCamion from './components/Camion'\r\nimport Combustible from './components/Combustible'\r\nimport GasTomza from './components/CombuGas'\r\nimport SuperGas from './components/CombuSuper'\r\n\r\n// Función Flecha o Arrow Function\r\nconst App = () => {\r\n  const [inicioSesion, guardarInicioSesion] = useState(false)\r\n  const [usuarioIniciado, guardarUsuarioIniciado] = useState({})\r\n\r\n  //Combustible\r\n  const [gas, setGas] = useState([])\r\n  const [superG, setSuper] = useState([])\r\n  const [triggerApp, setTriggerApp] = useState(true)\r\n\r\n  const apiProd = environment.url\r\n\r\n  useEffect(() => {\r\n    if(triggerApp){\r\n        const queryCediGas = async () => {\r\n            const response = await axios.get(`${apiProd}bod_combustibles?filter[where][cedi]=Gas Tomza`)\r\n            setGas(response.data)\r\n        }\r\n        queryCediGas();\r\n        const queryCediSuper = async () => {\r\n            const response = await axios.get(`${apiProd}bod_combustibles?filter[where][cedi]=Super Gas`)\r\n            setSuper(response.data)\r\n        }\r\n        queryCediSuper();\r\n        setTriggerApp(false)        \r\n    }\r\n},[triggerApp])\r\n\r\nconsole.log(\"BODEGA\", gas, superG);\r\n  \r\n  // Lo que ejecuta la función\r\n  console.log(\"Renderización de App\");\r\n  return (\r\n    <div>\r\n      <Router>\r\n      <Header />\r\n             \r\n        <Switch>\r\n          {(inicioSesion) ? <Route exact path=\"/Taller\" render={() => (<MenuPage usuarioIniciado={usuarioIniciado} setTriggerApp={setTriggerApp} />)} />\r\n          :\r\n          <Route exact path=\"/Taller/\" component={() => (<LoginUser guardarInicioSesion={guardarInicioSesion} guardarUsuarioIniciado={guardarUsuarioIniciado}/>)} />}\r\n\r\n          <Route exact path=\"/Taller/camion\" render={() => (<AgregarCamion usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion}/>)} />\r\n\r\n          <Route exact path=\"/Taller/repa\" render={() => (<Reparacion usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion}/>)} />\r\n\r\n          <Route exact path=\"/Taller/cambio\" render={() => (<CambioAceite usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion}/>)} />\r\n\r\n          <Route exact path=\"/Taller/mante\" render={() => (<Mantenimiento usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion}/>)} />\r\n\r\n          <Route exact path=\"/Taller/gas\" render={() => (<Combustible usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} superG={superG} gas={gas} />)} />\r\n\r\n          <Route exact path=\"/Taller/gas/gastomza\" render={() => (<GasTomza usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} gas={gas} setTriggerApp={setTriggerApp} />)} />\r\n\r\n          <Route exact path=\"/Taller/supergas\" render={() => (<SuperGas usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} superG={superG} setTriggerApp={setTriggerApp} />)} />\r\n\r\n          <Route>\r\n            <NotFoundPage />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\Header.js",[],"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\env\\environment.js",[],"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\pages\\MenuPage.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\pages\\NotFoundPage.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\pages\\Login.jsx",["190"],"import React, { useState } from 'react';\r\nimport environment from \"../env/environment\"\r\nimport Swal from 'sweetalert2';\r\nimport Error from './Error'\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nconst LoginUser = ({ guardarInicioSesion, guardarUsuarioIniciado }) => {\r\n\r\n    // const history = useHistory;\r\n    // const handleClick = () => history.push('/Cliente/MainMenu');\r\n\r\n    const [error, guardarError] = useState(false)\r\n    const [usuario, guardarUsuario] = useState('')//usuario===correo\r\n    const [contrasena, guardarContrasena] = useState('')\r\n\r\n    const apiProd = environment.url\r\n\r\n\r\n\r\n    const startLogin = async e => {\r\n        e.preventDefault();\r\n        if (usuario === '' || contrasena === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n\r\n        try {\r\n            console.log('pasa por aqui');\r\n            const resultLogin = await axios.get(`${apiProd}usertallers/findOne?filter[where][user]=${usuario}&&[pass]=${contrasena}`);\r\n            console.log(\"Consulta\")\r\n            if (resultLogin.status === 200) {\r\n                Swal.fire(\r\n                    'Credenciales Correctas',\r\n                    'Se ha iniciado sesion correctamente correctamente',\r\n                    'success'\r\n                )\r\n                const usuarioID = (resultLogin.data.id)\r\n                // const bita = await axios.post(`${apiProd}bitacoraTallers`, {\r\n                //     idUsuario: usuarioID,\r\n                //     accion: `Ha ingresado al sistema el usuario: ${usuario}`,\r\n                //     fecha: Date.now()\r\n                // });\r\n                // if(bita.status === 200){\r\n                //     console.log('se ha agregado a la bitacora');\r\n                // }\r\n                guardarInicioSesion(true);\r\n                guardarUsuarioIniciado(resultLogin.data)\r\n                console.log(\"USUARIOOO\", (resultLogin.data.id));\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Credenciales Incorrectas',\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"col-md-8 mx-auto \">\r\n            <h2 className=\"text-center pt-4\">Iniciar Sesión</h2>\r\n            {(error) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n            <form\r\n                className=\"mt-5\"\r\n                onSubmit={startLogin}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Correo del Usuario:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"usuario\"\r\n                        placeholder=\"Ej: lsolano@tomza.com\"\r\n                        onChange={e => guardarUsuario(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Contraseña:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"contrasena\"\r\n                        placeholder=\"Contraseña del usuario\"\r\n                        onChange={e => guardarContrasena(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"font-weight-bold mt-5 btn btn-primary btn-block py-3\" value=\"Iniciar Sesión\" />\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginUser;\r\n","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\Combustible.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\Camion.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\Mantenimiento.jsx",["191"],"import axios from 'axios';\r\nimport React,{useState, Fragment, useEffect} from 'react'\r\nimport environment from '../env/environment'\r\nimport CamionLista from './MantenimientoLista'\r\nimport Error from '../pages/Error'\r\n\r\n\r\nfunction Mantenimiento({inicioSesion, usuarioIniciado}) {\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [camiones, guardarCamiones] = useState([])\r\n    const [error, guardarError] = useState(false)\r\n    const [rtv, setRtv] = useState('')\r\n\r\n    \r\n    const apiProd = environment.url\r\n    \r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTrigger(true);\r\n        if (rtv === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(trigger){\r\n            console.log(\"PASA\")\r\n            const consultaCamion = async () => {\r\n            const response = await axios.get(`${apiProd}camions?filter[where][rtv]=${rtv}`);\r\n            guardarCamiones(response.data)\r\n            console.log(\"CAMIONES\", response.data)\r\n            }\r\n            consultaCamion()\r\n            setTrigger(false)\r\n    }\r\n    }, [trigger, apiProd])\r\n    console.log(\"CAMIONES\", camiones)\r\n\r\n    return (\r\n        <Fragment>\r\n        <h1 className=\"text-center\">Mantenimiento</h1>\r\n        {(error) ? <Error mensaje='Campo placa es obligatorio' /> : null}\r\n            <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                <label className=\"ml-3\">Rtv:</label>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group w-10 ml-3\">\r\n                    <select className=\"custom-select\" onChange={e => setRtv(e.target.value)}>\r\n                            <option disabled selected=\"\">Consultar...</option>\r\n                            <option value=\"Enero y Julio\">Enero y Julio</option>\r\n                            <option value=\"Febrero y Agosto\">Febrero y Agosto</option>\r\n                            <option value=\"Marzo y Setiembre\">Marzo y Setiembre</option>\r\n                            <option value=\"Mayo y Noviembre\">Mayo y Noviembre</option>\r\n                            <option value=\"Abril y Octubre\">Abril y Octubre</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Mantenimieto\" />\r\n                </form>\r\n\r\n                {(camiones.length === 0) ?\r\n                    <div className=\"alert alert-dismissible alert-light mt-3\">\r\n                        <h4 className=\"alert-heading text-center\" >No Hay Datos</h4>\r\n                        <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <ul className=\"list-group mt-3\">\r\n                            {camiones.map(camion => (\r\n                                <CamionLista\r\n                                    key={camion.id}\r\n                                    camion={camion}\r\n                                    inicioSesion={inicioSesion}\r\n                                    usuarioIniciado={usuarioIniciado}\r\n                                />\r\n                            ))}\r\n                        </ul>\r\n                        <ul className=\"list-group mt-3\">\r\n                                \r\n                        </ul>\r\n                    </div>\r\n                }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Mantenimiento\r\n","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\CambioAceite.jsx",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"import axios from 'axios';\r\nimport React,{useState, Fragment, useEffect, useRef} from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport environment from '../env/environment'\r\nimport CambioALista from './CambioALista'\r\nimport Swal from 'sweetalert2';\r\nimport Error from '../pages/Error'\r\n\r\n\r\n\r\nfunction CambioAceite ({inicioSesion, usuarioIniciado}) {\r\n\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [modal, setModal] = useState(false);\r\n    const [cambios, setCambios] = useState([])\r\n    const [kilometraje, setKilometraje] = useState('')\r\n    const [placaModal, setPlacaModal] = useState('')\r\n    const [camionModal, setCamionModal] = useState([])\r\n    const [error, guardarError] = useState(false)\r\n    const [errorModal, guardarErrorModal] = useState(false)\r\n\r\n\r\n\r\n    const idCamion = useRef('')\r\n    const rutaRef = useRef('')\r\n\r\n    const referenciaRuta = rutaRef.current.value;\r\n\r\n    const apiProd = environment.url\r\n\r\n    const handlerButtonAgregar = () => {\r\n        setModal(!modal)\r\n        setModal(true)\r\n        setCamionModal([])\r\n    }\r\n\r\n    const handlerButtonIngresar = () => {\r\n        setModal(!modal)\r\n\r\n        // if (kilometraje === ''  ) {\r\n        //     guardarErrorModal(true)\r\n        //     console.log(guardarErrorModal)\r\n        //     setModal(true)\r\n        //     return;\r\n        // }\r\n        // guardarErrorModal(false);\r\n        //const url = `${apiProd}camions/${idCamion.current}`;\r\n        console.log(\"CAAAAMION\", camionModal);\r\n\r\n        idCamion.current = parseInt(camionModal[0].id)\r\n        console.log(\"ID CAMION\", idCamion.current)\r\n\r\n        console.log('Kilometraje Inicial', camionModal[0].kmInicial);\r\n\r\n        const limite = (parseInt(camionModal[0].kmInicial) + 11000)\r\n        console.log('LIMITE', limite);\r\n\r\n        const sumado = (parseInt(camionModal[0].kmTotal) + parseInt(kilometraje))\r\n        console.log('SUMADO', sumado);\r\n       \r\n        \r\n        if(sumado < limite) {\r\n            \r\n        const objCamion = {\r\n            kmTotal: sumado,\r\n            cambio: 0\r\n        }\r\n            console.log('No ocupa cambio');\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                        Swal.fire(\r\n                            'Reporte Agregado',\r\n                            'Se ha agregado Correctamente',\r\n                            'success'\r\n                        )\r\n                    }else{\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: 'Vuelve a Intentarlo'\r\n                        })\r\n                    }\r\n            }\r\n            EditarCamion()\r\n        } else{\r\n            const objCamion = {\r\n                kmInicial: sumado,\r\n                kmTotal: sumado,\r\n                cambio: 1\r\n            }\r\n            console.log('Ocupa cambio')\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                        Swal.fire(\r\n                            'Reporte Agregado',\r\n                            'Se ha agregado Correctamente',\r\n                            'success'\r\n                        )\r\n                    }else{\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: 'Vuelve a Intentarlo'\r\n                        })\r\n                    }\r\n            }\r\n            EditarCamion()\r\n        }\r\n    }\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTrigger(true)\r\n        console.log(\"RECARGA\");\r\n\r\n        // if (placa === '') {\r\n        //     guardarError(true)\r\n        //     console.log(guardarError)\r\n        //     return;\r\n        // }\r\n        // guardarError(false);\r\n    }\r\n//     const handlerButtonCamiones = () => {\r\n//         setTriggerCamion(true)\r\n//     // useEffect(() => {\r\n//         if(triggerCamion){\r\n//             const queryCamiones = async () => {\r\n//                 const response = await axios.get(`${apiProd}camions/?filter[where][placa]=${placa}`)\r\n//                 setCamiones(response.data)\r\n//             }\r\n//             queryCamiones();\r\n//             setTriggerCamion(false)\r\n//             console.log(\"CAMIIIIIIo\", camiones);\r\n//         }\r\n//     // })\r\n// }\r\n    const props1 = []\r\n    const {\r\n        className\r\n    } = props1;\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n\r\n    // const handlerButtonCambioAceite = () => {\r\n    //     setTrigger(true)\r\n    useEffect(() => {\r\n        if(trigger){\r\n            const queryCambios = async () => {\r\n                const response = await axios.get(`${apiProd}camions/?filter[where][cambio]=${1}`)\r\n                setCambios(response.data)\r\n            }\r\n            queryCambios();\r\n            setTrigger(false)\r\n        \r\n        }\r\n    }, [trigger, apiProd])\r\n// }\r\n\r\n        // const handlePlaca = async e => {\r\n        // e.preventDefault();\r\n        //         const queryCamion = async () => {\r\n        //             const response = await axios.get(`${apiProd}camions/?filter[where][placa]=${placaModal}`)\r\n        //             setCamionModal(response.data)\r\n        //         }\r\n        //         queryCamion()\r\n        // }\r\n\r\n        // <label className=\"ml-3\">Placa:</label>\r\n        //         <div className=\"form-row\">\r\n        //             <div className=\"form-group w-10 ml-3\">\r\n        //                 <input type=\"text\" className=\"form-control\" name=\"placa\" placeholder=\"Placa\" onChange={e => setPlaca(e.target.value)} />\r\n        //             </div>\r\n        //         </div>\r\n\r\n        // <Button color=\"info\" className=\"mt-2\" onClick={handlerButtonAgregar}>Agregar Reporte</Button>\r\n                //                                     <Modal\r\n                //                                         isOpen={modal}\r\n                //                                         toggle={toggle}\r\n                //                                         className={className}\r\n                //                                         aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //                                         centered>\r\n                //                                         <ModalHeader toggle={toggle}>Reporte Kilometraje</ModalHeader>\r\n                //                                         <ModalBody>\r\n                //                                         {(errorModal) ? <Error mensaje='Campo Kilometraje es Requerido' /> : null}\r\n\r\n                //                                         <div className=\"form-group w-50\">\r\n                //                                                 <h6>Placa:</h6>\r\n                //                                                 <input\r\n                //                                                     type=\"text\"\r\n                //                                                     className=\"form-control mt-3  mr-3 mb-1\"\r\n                //                                                     onChange={e => setPlacaModal(e.target.value)}\r\n                //                                                      />\r\n                //                                             <Button className=\"btn btn-success\" onClick={handlePlaca}>Cargar Camion</Button>\r\n                //                                             </div>\r\n\r\n                //                                             {(camionModal.length !== 0) ?\r\n                //                                             <div className=\"form-group w-50\">\r\n                //                                                 <h6>Ruta:</h6>\r\n                //                                                 <input\r\n                //                                                     id=\"disabledInput\"\r\n                //                                                     type=\"text\"\r\n                //                                                     className=\"form-control mt-3  mr-3 mb-1\"\r\n                //                                                     disabled=\"true\"\r\n                //                                                     ref={referenciaRuta}\r\n                //                                                     defaultValue={camionModal[0].ruta}\r\n                //                                                      />\r\n                //                                             </div> \r\n                //                                             : null}\r\n\r\n                //                                             {(camionModal.length !== 0) ?\r\n                //                                             <div className=\"form-group w-50\">\r\n                //                                                 <h6>Kilometraje:</h6>\r\n                //                                                 <input\r\n                //                                                     type=\"text\"\r\n                //                                                     className=\"form-control mt-3  mr-3 mb-1\"\r\n                //                                                     onChange={e => setKilometraje(e.target.value)}\r\n                //                                                      />\r\n                //                                             </div>\r\n                //                                              : null}\r\n                //                                         </ModalBody>\r\n                //                                         <ModalFooter>\r\n                //                                             <Button color=\"primary\" onClick={handlerButtonIngresar}>Ingresar</Button>{' '}\r\n                //                                                     <Button color=\"warning\" onClick={toggle}>Cancel</Button>\r\n                //                                         </ModalFooter>\r\n                //                                     </Modal>   \r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center\">Cambio de Aceite</h1>\r\n            {(error) ? <Error mensaje='Campo placa es obligatorio' /> : null}\r\n            <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                \r\n\r\n                <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Cambio\" />\r\n \r\n                {(cambios.length === 0) ?\r\n                    <div className=\"alert alert-dismissible alert-light mt-3\">\r\n                    <h4 className=\"alert-heading text-center\">No hay Datos</h4>\r\n                    <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n                    </div>\r\n                    :\r\n                        <ul className=\"list-group mt-5\">\r\n                    {cambios.map(cam => (\r\n                        <CambioALista \r\n                        key={cam.id}\r\n                        cam={cam}\r\n                        usuarioIniciado={usuarioIniciado}\r\n                        inicioSesion={inicioSesion}\r\n                        />\r\n                    ))}\r\n                    </ul>}\r\n                    \r\n            </form>\r\n\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default CambioAceite\r\n","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\Reparacion.jsx",["208","209","210"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport environment from '../env/environment'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport ReparacionLista from './ReparacionLista'\r\nimport Swal from 'sweetalert2';\r\nimport Error from '../pages/Error'\r\n\r\n\r\nfunction CamionListaS({ camion }) {\r\n\r\n    return (\r\n        <option value={camion.placa} key={camion.placa}>{camion.placa} - {camion.marca} - {camion.ruta}</option>\r\n    );\r\n}\r\n\r\nfunction Reparacion({ inicioSesion, usuarioIniciado }) {\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [triggerA, setTriggerA] = useState(false)\r\n    const [triggerAgregar, setTriggerAgregar] = useState(false)\r\n    const [camiones, guardarCamiones] = useState([])\r\n    const [cami, guardarCamion] = useState('')\r\n    const [reporte, guardarReporte] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [ruta, guardarRuta] = useState('')\r\n    const [fecha, guardarFecha] = useState('')\r\n    const [placa, setPlaca] = useState('')\r\n    const [error, guardarError] = useState(false)\r\n    const [errorModal, guardarErrorModal] = useState(false)\r\n    const [fecha1, setFecha1] = useState(false)\r\n    const [reparaciones, guardarReparaciones] = useState([])\r\n\r\n    const apiProd = environment.url\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTrigger(true);\r\n        setTriggerA(true);\r\n\r\n        if (fecha === '' || placa === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false);\r\n    }\r\n\r\n    const props1 = []\r\n\r\n    const {\r\n        className\r\n    } = props1;\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    useEffect(() => {\r\n        if (trigger) {\r\n            console.log(\"PASA\")\r\n            const consultaCamion = async () => {\r\n                const response = await axios.get(`${apiProd}camions`);\r\n                guardarCamiones(response.data)\r\n                console.log(\"CAMIONES\", response.data)\r\n            }\r\n            consultaCamion()\r\n            setTrigger(false)\r\n        }\r\n    })\r\n\r\n    const camionSort = camiones.sort(camiones.placa);\r\n    console.log(\"Sorteado\", camionSort);\r\n\r\n    console.log(\"CAMIONES\", camiones)\r\n\r\n    useEffect(() => {\r\n        if (triggerA) {\r\n            if (fecha !== '' && placa !== '') {\r\n                const consultaRepa = async () => {\r\n                    const response = await axios.get(`${apiProd}reparacions?filter[where][entrada]=${fecha}&filter[where][idCamion]=${placa}`)\r\n                    guardarReparaciones(response.data)\r\n                    setTriggerA(false)\r\n                }\r\n                consultaRepa()\r\n            } else {\r\n                guardarError(true)\r\n            }\r\n        }\r\n    })\r\n    console.log(\"REPA\", reparaciones)\r\n\r\n    const handlerButtonAgregar = () => {\r\n        setModal(!modal)\r\n        setModal(true)\r\n        setTrigger(true)\r\n        setTriggerAgregar(true)\r\n    }\r\n    //para almacenar el cedi en la reparacion\r\n\r\n\r\n    const handlerButtonIngresar = () => {\r\n\r\n        setModal(false);\r\n\r\n        if (reporte === '' || cami === '') {\r\n            guardarErrorModal(true)\r\n            console.log(guardarErrorModal)\r\n            setModal(true)\r\n            return;\r\n        }\r\n        guardarErrorModal(false);\r\n\r\n        let date = new Date()\r\n\r\n        let day = date.getDate()\r\n        let month = date.getMonth() + 1\r\n        let year = date.getFullYear()\r\n\r\n        if (month < 10) {\r\n            console.log(`${year}-${month}-${day}`)\r\n            setFecha1(`${year}-0${month}-${day}`)\r\n        } else {\r\n            console.log(`${year}-${month}-${day}`)\r\n            setFecha1(`${year}-${month}-${day}`)\r\n        }\r\n\r\n        const cedi = usuarioIniciado.cedi\r\n\r\n        //cuando se ingresa un reporte \"aprobado\" entra como False\r\n        //0= False\r\n        //1= True\r\n        const repObj = {\r\n            cedi: cedi,\r\n            idCamion: cami,\r\n            reporte: reporte,\r\n            entrada: Date.now(),\r\n            aprobado: 0,\r\n            ruta: ruta,\r\n            repuestos: \"\",\r\n            costo: \"\"\r\n        }\r\n        console.log(\"OBJETO\", repObj);\r\n\r\n        if (triggerAgregar) {\r\n            try {\r\n                const AgregarRepa = async () => {\r\n                    const resultado = await axios.post(`${apiProd}reparacions`, repObj);\r\n                    if (resultado.status === 200) {\r\n                        console.log(\"Agregado\");\r\n                        Swal.fire(\r\n                            'Solicitud de Reparacion',\r\n                            'Se ha creado correctamente',\r\n                            'success'\r\n                        )\r\n                        const bita = await axios.post(`${apiProd}bitacoraTallers`, {\r\n                            idUsuario: usuarioIniciado.id,\r\n                            accion: `Ha ingresado una reparacion el usuario: ${usuarioIniciado.name}`,\r\n                            fecha: Date.now()\r\n                        });\r\n                        if (bita.status === 200) {\r\n                            console.log('se ha agregado a la bitacora');\r\n                        }\r\n                    }\r\n                }\r\n                AgregarRepa()\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n            setTriggerAgregar(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n        <div className=\"col-md-8 mx-auto\">\r\n        <h1 className=\"text-center mt-4\"> Reparaciones </h1>\r\n        {(error) ? <Error mensaje='Campo, placa y fecha son obligatorios' /> : null}\r\n        <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n            <label className=\"ml-3\">Fecha:</label>\r\n            <div className=\"form-row\">\r\n\r\n                <div className=\"form-group w-25 ml-3\">\r\n                 <input type=\"date\" className=\"form-control\" name=\"fecha_reparacion\" onChange={e => guardarFecha(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group w-10 ml-3\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"placa\" placeholder=\"Placa\" onChange={e => setPlaca(e.target.value)} />\r\n                </div>\r\n            </div>\r\n\r\n            <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Reparación\" />\r\n\r\n            {(inicioSesion && (usuarioIniciado.rol === 'Admin' || usuarioIniciado.rol === 'Supervisor')) ?\r\n                <Button color=\"info\" className=\"mt-2\" onClick={handlerButtonAgregar}>Agregar Reparación</Button>\r\n                : null}\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggle}\r\n                className={className}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n                <ModalHeader toggle={toggle}>Reparación</ModalHeader>\r\n                <ModalBody>\r\n                    {(errorModal) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n                    <div className=\"form-group w-50\">\r\n                        <label> Camion:</label>\r\n                        <select className=\"custom-select\" onChange={e => guardarCamion(e.target.value)}>\r\n                            <option value=\"\">Camion</option>\r\n                            {camionSort.map(camion => (\r\n                                <CamionListaS\r\n                                    key={camion.placa}\r\n                                    camion={camion}\r\n                                />))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group w-50\">\r\n                        <h6>Ruta:</h6>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control mt-3  mr-3 mb-1\"\r\n                            onChange={e => guardarRuta(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group w-50\">\r\n                        <h6>Reporte:</h6>\r\n                        <textarea\r\n                            type=\"text-area\"\r\n                            className=\"form-control mt-3  mr-3 mb-1\"\r\n                            onChange={e => guardarReporte(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handlerButtonIngresar}>Ingresar</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            {(reparaciones.length === 0) ?\r\n                <div className=\"alert alert-dismissible alert-light mt-3\">\r\n                    <h4 className=\"alert-heading text-center\">No hay Datos</h4>\r\n                    <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n                </div>\r\n                :\r\n                <ul className=\"list-group mt-5\">\r\n                    {reparaciones.map(repara => (\r\n                        <ReparacionLista\r\n                            key={repara.id}\r\n                            repara={repara}\r\n                            inicioSesion={inicioSesion}\r\n                            usuarioIniciado={usuarioIniciado}\r\n                        />\r\n                    ))}\r\n                </ul>}\r\n        </form>\r\n\r\n\r\n        </div>\r\n        </Fragment >\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Reparacion;\r\n\r\n\r\n","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\CombuGas.jsx",["211","212"],"import React, { Fragment, useState, useRef, useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport environment from '../env/environment'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Error from '../pages/Error'\r\nimport Swal from 'sweetalert2';\r\nimport GTLista from './GasTomzaLista';\r\n\r\nconst GasTomza = ({usuarioIniciado, gas, setTriggerApp,inicioSesion}) => {\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [error, guardarError] = useState(false)\r\n    const [triggerBod, setTriggerBod] = useState(false)\r\n    const [triggerCam, setTriggerCam] = useState(false)\r\n    const [triggerGas, setTriggerGas] = useState(false)\r\n    const [fecha, guardarFecha] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [modalCisterna, setModalCisterna] = useState(false);\r\n    const [errorModal, guardarErrorModal] = useState(false)\r\n    const [placaModal, setPlacaModal] = useState('')\r\n    const [camionModal, setCamionModal] = useState([])\r\n    const [marcaIni, setMarcaIni] = useState(\"\");\r\n    const [marcaFin, setMarcaFin] = useState(\"\")\r\n    const [kilometraje, setKilometraje] = useState('')\r\n    const [gasolina, setGasolina] = useState([])\r\n    const [tipo, setTipo] = useState('') \r\n    const [codigo, setCodigo] = useState(0)\r\n\r\n\r\n    const apiProd = environment.url\r\n\r\n    const rutaRef = useRef('')\r\n    const referenciaRuta = rutaRef.current.value;\r\n\r\n    const bodegaRef = useRef('')\r\n    bodegaRef.current = parseInt(gas[0].id)\r\n\r\n    const idCamion = useRef('')\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTriggerGas(true)\r\n\r\n        if (fecha === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(triggerGas){\r\n            console.log('TRIGGER', triggerGas);\r\n            console.log('FECHAAA', fecha);\r\n            const queryGas = async () => {\r\n                const response = await axios.get(`${apiProd}descarga_gasols?filter[where][fecha]=${fecha}&filter[where][cedi]=Gas Tomza`)\r\n                setGasolina(response.data)\r\n                console.log(\"PUTAsal\", response.data\r\n                \r\n                );\r\n                console.log(\"Largo\", gasolina.length);\r\n            }\r\n            queryGas()\r\n        }\r\n        setTriggerGas(false)\r\n\r\n    })\r\n\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const toggle1 = () => setModalCisterna(!modalCisterna);\r\n\r\n    const handleCisterna = () => {\r\n        setModalCisterna(true)\r\n        setTriggerApp(true)\r\n    }\r\n\r\n    const handleLleno = () => {\r\n        const codi = 202107\r\n\r\n        const objLleno = {\r\n            cap_actual: ((gas[0].cap_actual) + (7580))\r\n        }\r\n        const codig = parseInt(codigo)\r\n\r\n\r\n        if(codig === codi){\r\n            console.log(\"IGUaL\");\r\n            const RellenoCisterna = async () => {\r\n                const result = await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objLleno)\r\n                if(result.status === 200){\r\n                    setTriggerApp(true)\r\n                    Swal.fire(\r\n                        `Se recargado la Cisterna`,\r\n                        'Se ha ingresado correctamente',\r\n                        'success'\r\n                    )\r\n                    setModalCisterna(false)\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: 'Vuelve a Intentarlo'\r\n                    })\r\n                }\r\n            }\r\n            RellenoCisterna()\r\n\r\n        }\r\n        setTriggerApp(true)\r\n\r\n\r\n        console.log(\"OBJETO\", objLleno);\r\n    }\r\n\r\n    const handlerButtonAgregar = () => {\r\n        setModal(!modal)\r\n        setCamionModal([])\r\n        setMarcaIni(\"\")\r\n        setMarcaFin(\"\")\r\n        setKilometraje(\"\")\r\n        guardarErrorModal(false);\r\n        setTrigger(true)\r\n        setTriggerBod(true)\r\n        setTriggerCam(true)\r\n    }\r\n\r\n    console.log(\"NIGGA\", (gas[0].cap_actual - (marcaFin - marcaIni)));\r\n    const handlerButtonIngresar = () => {\r\n\r\n        \r\n              \r\n        if (placaModal === \"\" || marcaIni === \"\" || marcaFin === \"\" || kilometraje === \"\" || tipo === \"\") {\r\n            guardarErrorModal(true)\r\n            console.log(guardarErrorModal)\r\n            setModal(true);\r\n            return;\r\n        }\r\n        guardarErrorModal(false);\r\n        setModal(false);\r\n        const llenado = marcaFin - marcaIni\r\n        const rebajoBodega = (gas[0].cap_actual - llenado)\r\n\r\n            if((gas[0].cap_actual) - (rebajoBodega) >= 3000){\r\n\r\n        const objGasolina = {\r\n            placa_camion: camionModal[0].placa,\r\n            fecha: Date.now(),\r\n            ruta: camionModal[0].ruta,\r\n            descarga: llenado,\r\n            cedi: usuarioIniciado.cedi,\r\n            tipo: tipo\r\n        }\r\n        console.log(\"GASOLINA\", objGasolina);\r\n\r\n\r\n        console.log(\"BODEGA\", rebajoBodega);\r\n\r\n        const objBodega = {\r\n            cap_actual: (rebajoBodega)\r\n        }\r\n        console.log(\"ACtual\", gas[0].cap_actual);\r\n        console.log(\"rebajado\", objBodega);\r\n\r\n        if(trigger){\r\n            setTriggerApp(true)\r\n            const AgregarCargaGas = async() => {\r\n                const result = await axios.post(`${apiProd}descarga_gasols`, objGasolina)\r\n                if(result.status === 200){\r\n                    console.log(\"DESCARGA\");\r\n                }\r\n                setTrigger(false)\r\n            }\r\n            AgregarCargaGas();\r\n        }\r\n        setTriggerApp(false)\r\n\r\n        if(triggerBod){\r\n                console.log(\"BODEGA BAJA\");\r\n                const EditarBodega = async() => {\r\n                    const result =  await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objBodega)\r\n                    if(result.status === 200){\r\n                        Swal.fire(\r\n                            `Se han agredado ${llenado}Lts al camión placa ${camionModal[0].placa}`,\r\n                                'Se ha ingresado correctamente',\r\n                                'success'\r\n                        )\r\n                        const bita = await axios.post(`${apiProd}bitacoraTallers`, {\r\n                            idUsuario: usuarioIniciado.id,\r\n                            accion: `Ha ingresado una descarga de combustible el usuario: ${usuarioIniciado.name}`,\r\n                            fecha: Date.now()\r\n                        });\r\n                        if(bita.status === 200){\r\n                            console.log('se ha agregado a la bitacora');\r\n                        }\r\n                    }\r\n                    setTriggerBod(false)\r\n                    setTriggerApp(true)\r\n                }\r\n            EditarBodega()\r\n            \r\n        idCamion.current = parseFloat(camionModal[0].id)\r\n        console.log(\"PREMIOO\", idCamion.current);\r\n        }\r\n\r\n        if(triggerCam){\r\n\r\n        console.log(\"CAAAAMION\", camionModal);\r\n\r\n        idCamion.current = parseInt(camionModal[0].id)\r\n        console.log(\"ID CAMION\", idCamion.current)\r\n\r\n        console.log('Kilometraje Inicial', camionModal[0].kmInicial);\r\n\r\n        const limite = (parseInt(camionModal[0].kmInicial) + 11000)\r\n        console.log('LIMITE', limite);\r\n\r\n        const sumado = (parseInt(camionModal[0].kmTotal) + parseInt(kilometraje))\r\n        console.log('SUMADO', sumado);\r\n\r\n        if(sumado < limite) {\r\n            \r\n        const objCamion = {\r\n            kmTotal: sumado,\r\n            cambio: 0\r\n        }\r\n            console.log('No ocupa cambio');\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                        console.log('MENORR');\r\n                    }\r\n            }\r\n            EditarCamion()\r\n        } else{\r\n            const objCamion = {\r\n                kmInicial: sumado,\r\n                kmTotal: sumado,\r\n                cambio: 1\r\n            }\r\n            console.log('Ocupa cambio')\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                       console.log(\"MAYORR\");\r\n                    }\r\n            }\r\n            EditarCamion()\r\n            \r\n        }\r\n        }\r\n        \r\n            }else{\r\n                console.log(\"BODEGA ALTA\");\r\n                Swal.fire(\r\n                    `El tanque principal está en el mínimo`,\r\n                        'Solicite llenado de tanque',\r\n                        'error'\r\n                )\r\n                setModal(true)\r\n            }\r\n}\r\n    \r\n    const handlePlaca = () => {\r\n\r\n        if(placaModal !== ''){\r\n        console.log(\"PASAAASS\");\r\n                const queryCamion = async () => {\r\n                    const response = await axios.get(`${apiProd}camions/?filter[where][placa]=${placaModal}`)\r\n                    if(response.data.length === 0){\r\n                        Swal.fire(\r\n                            `Placa ${placaModal}, no encontrada`,\r\n                            'Intenta nuevamente',\r\n                            'error',\r\n                        )\r\n                        setCamionModal([])\r\n                    }\r\n                    setCamionModal(response.data)\r\n                }\r\n                queryCamion()\r\n        }else{\r\n            Swal.fire(\r\n                'Espacio Necesario',\r\n                'Intente nuevamente',\r\n                'error',\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center\">Combustible Gas Tomza</h1>\r\n            {(error) ? <Error mensaje='Campo fecha son obligatorios' /> : null}\r\n            <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                <label className=\"ml-3\">Fecha:</label>\r\n                <div className=\"form-row\">\r\n\r\n                    <div className=\"form-group w-25 ml-3\">\r\n                        <input type=\"date\" className=\"form-control\" name=\"fecha_reparacion\" onChange={e => guardarFecha(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Gasto\" />\r\n\r\n                <Button color=\"info\" className=\"mt-2\" onClick={handlerButtonAgregar}>Agregar Gasto</Button>\r\n\r\n                <Button color=\"success\" className=\"mt-2 ml-3\" onClick={handleCisterna}>Cisternas Combustibles</Button>\r\n\r\n                                                    <Modal\r\n                                                        isOpen={modal}\r\n                                                        toggle={toggle}\r\n                                                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                                        centered>\r\n                                                        <ModalHeader toggle={toggle}>Combustible</ModalHeader>\r\n                                                        <ModalBody>\r\n                                                        {(errorModal) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n                                                            <div className=\"form-group w-50\">\r\n                                                                <h6>Placa:</h6>\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                    onChange={e => setPlacaModal(e.target.value)}\r\n                                                                     />\r\n                                                                     <Button className=\"btn btn-success mt-2\" onClick={handlePlaca}>Cargar Camion</Button>\r\n                                                            </div>\r\n\r\n                                                            {(camionModal.length !== 0) ?\r\n                                                                <div className=\"form-group w-50\">\r\n                                                                    <h6>Ruta:</h6>\r\n                                                                    <input\r\n                                                                        id=\"disabledInput\"\r\n                                                                        type=\"text\"\r\n                                                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                        disabled=\"true\"\r\n                                                                        ref={referenciaRuta}\r\n                                                                        defaultValue={camionModal[0].ruta}\r\n                                                                         />\r\n                                                                </div>\r\n                                                                : null}\r\n\r\n                                                                {(camionModal.length !== 0) ?\r\n                                                                    <div className=\"form-group w-50\">\r\n                                                                        <label>Tipo:</label>\r\n                                                                       <select className=\"custom-select\"  onChange={e => setTipo(e.target.value)}>\r\n                                                                       <option value=\"\">Tipo</option>\r\n                                                                       <option value=\"Recope\">Viajes a Recope</option>\r\n                                                                       <option value=\"Aquilados\">Viaje de Alquilados</option>\r\n                                                                       <option value=\"Metalco\">Metalco</option>\r\n                                                                       <option value=\"La Cruz\">La Cruz</option>\r\n                                                                       <option value=\"Carreta Guapiles\">Carreta Guápiles</option>\r\n                                                                       <option value=\"Tanden\">Tanden</option>\r\n                                                                       <option value=\"Carreta Sur\">Carreta Zona Sur</option>\r\n                                                                       <option value=\"Traslados\">Traslados</option>\r\n                                                                       </select>\r\n                                                                    </div>\r\n                                                                    : null}\r\n\r\n                                                                {(camionModal.length !== 0) ?\r\n                                                                    <div className=\"form-group w-50\">\r\n                                                                        <h6>Marca Inicial:</h6>\r\n                                                                        <input\r\n                                                                            type=\"text\"\r\n                                                                            className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                            onChange={e => setMarcaIni(e.target.value)}\r\n                                                                             />\r\n                                                                    </div>\r\n                                                                     : null}\r\n\r\n                                                                     {(camionModal.length !== 0) ?\r\n                                                                        <div className=\"form-group w-50\">\r\n                                                                            <h6>Marca Final:</h6>\r\n                                                                            <input\r\n                                                                                type=\"text\"\r\n                                                                                className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                                onChange={e => setMarcaFin(e.target.value)}\r\n                                                                                 />\r\n                                                                        </div>\r\n                                                                         : null}\r\n\r\n                                                                         {(camionModal.length !== 0) ?\r\n                                                                            <div className=\"form-group w-50\">\r\n                                                                                <h6>Kilometraje:</h6>\r\n                                                                                <input\r\n                                                                                    type=\"text\"\r\n                                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                                    onChange={e => setKilometraje(e.target.value)}\r\n                                                                                     />\r\n                                                                            </div>\r\n                                                                             : null}\r\n\r\n                                                        </ModalBody>\r\n                                                        <ModalFooter>\r\n                                                            <Button color=\"primary\" onClick={handlerButtonIngresar}>Ingresar</Button>{' '}\r\n                                                            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                                                        </ModalFooter>\r\n                                                    </Modal>\r\n                                                    <Modal\r\n                                                        isOpen={modalCisterna}\r\n                                                        toggle1={toggle1}\r\n                                                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                                        centered>\r\n                                                        <ModalHeader toggle1={toggle1}>Recarga Cisterna</ModalHeader>\r\n                                                        <ModalBody>\r\n                                                            <div className=\"form-group w-50\">\r\n                                                                <h6>Código:</h6>\r\n                                                                <input\r\n                                                                    type=\"password\"\r\n                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                    onChange={e => setCodigo(e.target.value)}\r\n                                                                     />\r\n                                                            </div>\r\n                                                        </ModalBody>\r\n                                                        <ModalFooter>\r\n                                                            <Button color=\"primary\" onClick={handleLleno}>Ingresar</Button>{' '}\r\n                                                            <Button color=\"secondary\" onClick={toggle1}>Cancel</Button>\r\n                                                        </ModalFooter>\r\n                                                    </Modal>\r\n\r\n        {(gasolina.length === 0) ?\r\n            <div className=\"alert alert-dismissible alert-light mt-3\">\r\n            <h4 className=\"alert-heading text-center\">No hay Datos</h4>\r\n            <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n            </div>\r\n            :\r\n                <ul className=\"list-group mt-5\">\r\n                {gasolina.map(gaso => (\r\n                <GTLista \r\n                key={gaso.id}\r\n                gaso={gaso}\r\n                usuarioIniciado={usuarioIniciado}\r\n                inicioSesion={inicioSesion}\r\n                />\r\n            ))}\r\n            </ul>\r\n        } \r\n            \r\n            </form>\r\n        </Fragment >\r\n        )\r\n}\r\n\r\n\r\nexport default GasTomza","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\CombuSuper.jsx",["213","214"],"import React, { Fragment, useState, useRef, useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport environment from '../env/environment'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Error from '../pages/Error'\r\nimport Swal from 'sweetalert2';\r\nimport SPLista from './SuperGasLista';\r\n\r\nconst SuperGas = ({usuarioIniciado, superG, setTriggerApp,inicioSesion}) => {\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [error, guardarError] = useState(false)\r\n    const [triggerBod, setTriggerBod] = useState(false)\r\n    const [triggerCam, setTriggerCam] = useState(false)\r\n    const [triggerGas, setTriggerGas] = useState(false)\r\n    const [fecha, setFecha] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [modalCisterna, setModalCisterna] = useState(false);\r\n    const [errorModal, guardarErrorModal] = useState(false)\r\n    const [placaModal, setPlacaModal] = useState('')\r\n    const [camionModal, setCamionModal] = useState([])\r\n    const [marcaIni, setMarcaIni] = useState(\"\");\r\n    const [marcaFin, setMarcaFin] = useState(\"\")\r\n    const [kilometraje, setKilometraje] = useState('')\r\n    const [gasolina, setGasolina] = useState([])\r\n    const [tipo, setTipo] = useState('') \r\n    const [codigo, setCodigo] = useState(0)\r\n\r\n\r\n    const apiProd = environment.url\r\n\r\n    const rutaRef = useRef('')\r\n    const referenciaRuta = rutaRef.current.value;\r\n\r\n    const bodegaRef = useRef('')\r\n    bodegaRef.current = parseInt(superG[0].id)\r\n\r\n\r\n    const idCamion = useRef('')\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTriggerGas(true)\r\n\r\n        if (fecha === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false)\r\n    }\r\n\r\n    // const handleConsulta = () => {\r\n    //     setTriggerGas(true)\r\n    // }\r\n\r\n    console.log('TRIGGER', triggerGas);\r\n    useEffect(() => {\r\n        if(triggerGas){\r\n            console.log('TRIGGER', triggerGas);\r\n            console.log('FECHAAA', fecha);\r\n            const queryGas = async () => {\r\n                const response = await axios.get(`${apiProd}descarga_gasols?filter[where][fecha]=${fecha}&filter[where][cedi]=Super Gas`)\r\n                setGasolina(response.data)\r\n                console.log(\"PUTAsal\", response.data\r\n                \r\n                );\r\n                console.log(\"Largo\", gasolina.length);\r\n            }\r\n            queryGas()\r\n        }\r\n        setTriggerGas(false)\r\n\r\n    })\r\n\r\n    console.log(\"GASOLINA\", gasolina);\r\n\r\n\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const toggle1 = () => setModalCisterna(!modalCisterna);\r\n\r\n    const handleCisterna = () => {\r\n        setModalCisterna(true)\r\n        setTriggerApp(true)\r\n    }\r\n\r\n    const handleLleno = () => {\r\n        const codi = 202107\r\n\r\n        console.log(\"Bodega\", superG[0].cap_actual);\r\n\r\n        const objLleno = {\r\n            cap_actual: ((superG[0].cap_actual) + (3790))\r\n        }\r\n\r\n        const codig = parseInt(codigo)\r\n\r\n        if(codig === codi){\r\n            console.log(\"IGUaL\");\r\n            const RellenoCisterna = async () => {\r\n                const result = await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objLleno)\r\n                if(result.status === 200){\r\n                    Swal.fire(\r\n                        `Se ha recargado la Cisterna`,\r\n                        'Se ha ingresado correctamente',\r\n                        'success'\r\n                    )\r\n                    setModalCisterna(false)\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: 'Vuelve a Intentarlo'\r\n                    })\r\n                }\r\n            }\r\n            RellenoCisterna()\r\n            setTriggerApp(true)\r\n\r\n        }\r\n\r\n        console.log(\"OBJETO\", objLleno);\r\n    }\r\n\r\n    const handlerButtonAgregar = () => {\r\n        setModal(!modal)\r\n        setCamionModal([])\r\n        setMarcaIni(\"\")\r\n        setMarcaFin(\"\")\r\n        setKilometraje(\"\")\r\n        guardarErrorModal(false);\r\n        setTrigger(true)\r\n        setTriggerBod(true)\r\n        setTriggerCam(true)\r\n    }\r\n\r\n    const handlerButtonIngresar = () => {\r\n              \r\n        if (placaModal === \"\" || marcaIni === \"\" || marcaFin === \"\" || kilometraje === \"\" || tipo === \"\") {\r\n            guardarErrorModal(true)\r\n            console.log(guardarErrorModal)\r\n            setModal(true);\r\n            return;\r\n        }\r\n        guardarErrorModal(false);\r\n        setModal(false);\r\n\r\n        console.log(\"CAMION\", camionModal);\r\n\r\n        const llenado = marcaFin - marcaIni\r\n        console.log('Resta', llenado);\r\n\r\n        const objGasolina = {\r\n            placa_camion: camionModal[0].placa,\r\n            fecha: Date.now(),\r\n            ruta: camionModal[0].ruta,\r\n            descarga: llenado,\r\n            cedi: usuarioIniciado.cedi,\r\n            tipo: tipo\r\n        }\r\n        console.log(\"GASOLINA\", objGasolina);\r\n\r\n        const rebajoBodega = (superG[0].cap_actual - llenado)\r\n\r\n        console.log(\"BODEGA\", rebajoBodega);\r\n\r\n        const objBodega = {\r\n            cap_actual: (rebajoBodega)\r\n        }\r\n        console.log(\"ACtual\", superG[0].cap_actual);\r\n        console.log(\"rebajado\", objBodega);\r\n\r\n        if(trigger){\r\n            setTriggerApp(true)\r\n            const AgregarCargaGas = async() => {\r\n                const result = await axios.post(`${apiProd}descarga_gasols`, objGasolina)\r\n                if(result.status === 200){\r\n                    console.log(\"DESCARGA\");\r\n                }\r\n                setTrigger(false)\r\n            }\r\n            AgregarCargaGas();\r\n        }\r\n        setTriggerApp(false)\r\n\r\n\r\n        if(triggerBod){\r\n        const EditarBodega = async() => {\r\n            const result =  await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objBodega)\r\n            if(result.status === 200){\r\n                Swal.fire(\r\n                    `Se han agredado ${llenado}Lts al camión ${camionModal[0].placa}`,\r\n                        'Se ha ingresado correctamente',\r\n                        'success'\r\n                )\r\n                const bita = await axios.post(`${apiProd}bitacoraTallers`, {\r\n                    idUsuario: usuarioIniciado.id,\r\n                    accion: `Ha ingresado una descarga de combustible el usuario: ${usuarioIniciado.name}`,\r\n                    fecha: Date.now()\r\n                });\r\n                if(bita.status === 200){\r\n                    console.log('se ha agregado a la bitacora');\r\n\r\n                }\r\n            }\r\n            setTriggerBod(false)\r\n            setTriggerApp(true)\r\n\r\n        }\r\n        EditarBodega()\r\n        idCamion.current = parseFloat(camionModal[0].id)\r\n        console.log(\"PREMIOO\", idCamion.current);\r\n        \r\n    }\r\n\r\n    if(triggerCam){\r\n\r\n        console.log(\"CAAAAMION\", camionModal);\r\n\r\n        idCamion.current = parseInt(camionModal[0].id)\r\n        console.log(\"ID CAMION\", idCamion.current)\r\n\r\n        console.log('Kilometraje Inicial', camionModal[0].kmInicial);\r\n\r\n        const limite = (parseInt(camionModal[0].kmInicial) + 11000)\r\n        console.log('LIMITE', limite);\r\n\r\n        const sumado = (parseInt(camionModal[0].kmTotal) + parseInt(kilometraje))\r\n        console.log('SUMADO', sumado);\r\n\r\n        if(sumado < limite) {\r\n            \r\n        const objCamion = {\r\n            kmTotal: sumado,\r\n            cambio: 0\r\n        }\r\n            console.log('No ocupa cambio');\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                        console.log('MENORR');\r\n                    }\r\n            }\r\n            EditarCamion()\r\n        } else{\r\n            const objCamion = {\r\n                kmInicial: sumado,\r\n                kmTotal: sumado,\r\n                cambio: 1\r\n            }\r\n            console.log('Ocupa cambio')\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                       console.log(\"MAYORR\");\r\n                    }\r\n            }\r\n            EditarCamion()\r\n            \r\n        }\r\n    }\r\n    }\r\n    \r\n    const handlePlaca = () => {\r\n\r\n        if(placaModal !== ''){\r\n        console.log(\"PASAAASS\");\r\n                const queryCamion = async () => {\r\n                    const response = await axios.get(`${apiProd}camions/?filter[where][placa]=${placaModal}`)\r\n                    if(response.data.length === 0){\r\n                        Swal.fire(\r\n                            `Placa ${placaModal}, no encontrada`,\r\n                            'Intenta nuevamente',\r\n                            'error',\r\n                        )\r\n                        setCamionModal([])\r\n                    }\r\n                    setCamionModal(response.data)\r\n                }\r\n                queryCamion()\r\n        }else{\r\n            Swal.fire(\r\n                'Espacio Necesario',\r\n                'Intente nuevamente',\r\n                'error',\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center\">Combustible Super Gas\r\n            </h1>\r\n            {(error) ? <Error mensaje='Campo fecha son obligatorios' /> : null}\r\n            <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                <label className=\"ml-3\">Fecha:</label>\r\n                <div className=\"form-row\">\r\n\r\n                    <div className=\"form-group w-25 ml-3\">\r\n                        <input type=\"date\" className=\"form-control\" name=\"fecha_reparacion\" onChange={e => setFecha(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Gasto\" />\r\n\r\n                <Button color=\"info\" className=\"mt-2\" onClick={handlerButtonAgregar}>Agregar Gasto</Button>\r\n\r\n                <Button color=\"success\" className=\"mt-2 ml-3\" onClick={handleCisterna}>Cisternas Combustibles</Button>\r\n\r\n                                                    <Modal\r\n                                                        isOpen={modal}\r\n                                                        toggle={toggle}\r\n                                                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                                        centered>\r\n                                                        <ModalHeader toggle={toggle}>Combustible</ModalHeader>\r\n                                                        <ModalBody>\r\n                                                        {(errorModal) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n                                                            <div className=\"form-group w-50\">\r\n                                                                <h6>Placa:</h6>\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                    onChange={e => setPlacaModal(e.target.value)}\r\n                                                                     />\r\n                                                                     <Button className=\"btn btn-success mt-2\" onClick={handlePlaca}>Cargar Camion</Button>\r\n                                                            </div>\r\n\r\n                                                            {(camionModal.length !== 0) ?\r\n                                                                <div className=\"form-group w-50\">\r\n                                                                    <h6>Ruta:</h6>\r\n                                                                    <input\r\n                                                                        id=\"disabledInput\"\r\n                                                                        type=\"text\"\r\n                                                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                        disabled=\"true\"\r\n                                                                        ref={referenciaRuta}\r\n                                                                        defaultValue={camionModal[0].ruta}\r\n                                                                         />\r\n                                                                </div>\r\n                                                                : null}\r\n\r\n                                                                {(camionModal.length !== 0) ?\r\n                                                                    <div className=\"form-group w-50\">\r\n                                                                        <label>Tipo:</label>\r\n                                                                       <select className=\"custom-select\"  onChange={e => setTipo(e.target.value)}>\r\n                                                                       <option value=\"\">Tipo</option>\r\n                                                                       <option value=\"Recope\">Viajes a Recope</option>\r\n                                                                       <option value=\"Aquilados\">Viaje de Alquilados</option>\r\n                                                                       <option value=\"Metalco\">Metalco</option>\r\n                                                                       <option value=\"La Cruz\">La Cruz</option>\r\n                                                                       <option value=\"Carreta Guapiles\">Carreta Guápiles</option>\r\n                                                                       <option value=\"Tanden\">Tanden</option>\r\n                                                                       <option value=\"Carreta Sur\">Carreta Zona Sur</option>\r\n                                                                       <option value=\"Traslados\">Traslados</option>\r\n                                                                       </select>\r\n                                                                    </div>\r\n                                                                    : null}\r\n\r\n                                                                {(camionModal.length !== 0) ?\r\n                                                                    <div className=\"form-group w-50\">\r\n                                                                        <h6>Marca Inicial:</h6>\r\n                                                                        <input\r\n                                                                            type=\"text\"\r\n                                                                            className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                            onChange={e => setMarcaIni(e.target.value)}\r\n                                                                             />\r\n                                                                    </div>\r\n                                                                     : null}\r\n\r\n                                                                     {(camionModal.length !== 0) ?\r\n                                                                        <div className=\"form-group w-50\">\r\n                                                                            <h6>Marca Final:</h6>\r\n                                                                            <input\r\n                                                                                type=\"text\"\r\n                                                                                className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                                onChange={e => setMarcaFin(e.target.value)}\r\n                                                                                 />\r\n                                                                        </div>\r\n                                                                         : null}\r\n\r\n                                                                         {(camionModal.length !== 0) ?\r\n                                                                            <div className=\"form-group w-50\">\r\n                                                                                <h6>Kilometraje:</h6>\r\n                                                                                <input\r\n                                                                                    type=\"text\"\r\n                                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                                    onChange={e => setKilometraje(e.target.value)}\r\n                                                                                     />\r\n                                                                            </div>\r\n                                                                             : null}\r\n\r\n                                                        </ModalBody>\r\n                                                        <ModalFooter>\r\n                                                            <Button color=\"primary\" onClick={handlerButtonIngresar}>Ingresar</Button>{' '}\r\n                                                            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                                                        </ModalFooter>\r\n                                                    </Modal>\r\n                                                    <Modal\r\n                                                        isOpen={modalCisterna}\r\n                                                        toggle1={toggle1}\r\n                                                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                                        centered>\r\n                                                        <ModalHeader toggle1={toggle1}>Recarga Cisterna</ModalHeader>\r\n                                                        <ModalBody>\r\n                                                            <div className=\"form-group w-50\">\r\n                                                                <h6>Código:</h6>\r\n                                                                <input\r\n                                                                    type=\"password\"\r\n                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                    onChange={e => setCodigo(e.target.value)}\r\n                                                                     />\r\n                                                            </div>\r\n                                                        </ModalBody>\r\n                                                        <ModalFooter>\r\n                                                            <Button color=\"primary\" onClick={handleLleno}>Ingresar</Button>{' '}\r\n                                                            <Button color=\"secondary\" onClick={toggle1}>Cancel</Button>\r\n                                                        </ModalFooter>\r\n                                                    </Modal>\r\n\r\n        {(gasolina.length === 0) ?\r\n            <div className=\"alert alert-dismissible alert-light mt-3\">\r\n            <h4 className=\"alert-heading text-center\">No hay Datos</h4>\r\n            <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n            </div>\r\n            :\r\n                <ul className=\"list-group mt-5\">\r\n                {gasolina.map(gaso => (\r\n                <SPLista \r\n                key={gaso.id}\r\n                gaso={gaso}\r\n                usuarioIniciado={usuarioIniciado}\r\n                inicioSesion={inicioSesion}\r\n                />\r\n            ))}\r\n            </ul>\r\n        } \r\n            \r\n            </form>\r\n        </Fragment >\r\n        )\r\n}\r\n\r\n\r\nexport default SuperGas","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\pages\\Error.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\MantenimientoLista.jsx",["215"],"import React,{useState} from 'react'\r\n\r\n\r\nfunction CamionLista({camion,inicioSesion,usuarioIniciado} ){\r\n\r\n\r\n//     var cadena = camion.placa;\r\n//     console.log(\"QUEEE\", cadena);\r\n//     var ultimo = cadena.charAt(cadena.length -1)\r\n//     console.log(\"ULTIMOO\", ultimo);\r\n\r\n//     const placa1y7 = 'Enero y Julio'\r\n//     const placa2y8 = 'Febrero y Agosto'\r\n//     const placa3y9 = 'Marzo y Setiembre'\r\n//     const placa4 = 'Abril y Octubre'\r\n//     const placa5y0 = 'Mayo y Noviembre'\r\n\r\n//     if(camion.length !== 0){\r\n//         setTrigger(true)\r\n//     }\r\n//     if(trigger){\r\n//     if(ultimo === '1' ){\r\n//     setRtv(placa1y7)\r\n//     setTrigger(false)\r\n//     }\r\n// }\r\n    // if(ultimo === 2 && ultimo === 8){\r\n    //     setRtv('Febrero y Agosto')\r\n    // }\r\n    // if(ultimo === 3 && ultimo === 9){\r\n    //     setRtv('Marzo y Setiembre')\r\n    // }\r\n    // if(ultimo === 4){\r\n    //     setRtv('Abril y Octubre')\r\n    // }\r\n    // if(ultimo === 5 && ultimo === 0){\r\n    //     setRtv('Mayo y Noviembre')\r\n    // }\r\n\r\n    \r\n\r\n\r\n\r\n    return(\r\n\r\n        <li className=\"list-group-item d-flex justify-content-between align-item-center\" data-categoria={camion.unidad_negocio}>\r\n            <p>\r\n                <span className=\"font-weight-bold text-warning\">Camion: {camion.marca}{' '}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Placa: {camion.placa}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Ruta: {camion.ruta}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Unidad de Negocio: {camion.unidad_negocio}</span><br></br>\r\n                <span className=\"font-weight-bold\">  RTV: {camion.rtv}</span><br></br>\r\n                <span className=\"font-weight-bold\">  TC: {camion.tc}</span><br></br>\r\n            </p>\r\n            \r\n        </li>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default CamionLista;\r\n\r\n//{`/choferes/editar/${camion.id}`}","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\CambioALista.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\ReparacionLista.jsx",["216"],"import axios from 'axios';\r\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport environment from '../env/environment'\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nfunction ReparacionLista({ repara, inicioSesion,usuarioIniciado}) {\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [repuestos, setRepuestos] = useState('');\r\n    const [costo, setCosto] = useState('');\r\n    const [objeto,setObjeto] = useState('')\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [reparacion, setReparacion] = useState([])\r\n    const [fecha1, setFecha1] = useState('')\r\n\r\n\r\n    const apiProd = environment.url\r\n\r\n    const idReparacion =useRef('')\r\n\r\n    const props1 = []\r\n    const {\r\n        className\r\n    } = props1;\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const handleRepuestos = () => {\r\n        idReparacion.current = parseInt(reparacion[0].id)\r\n        console.log(\"IDDDD\", idReparacion.current);\r\n        const url = `${apiProd}reparacions/${idReparacion.current}`;\r\n\r\n        let date = new Date()\r\n\r\n            let day = date.getDate()\r\n            let month = date.getMonth() + 1\r\n            let year = date.getFullYear()\r\n            \r\n            if(month < 10){\r\n            console.log(`${year}-${month}-${day}`)\r\n            setFecha1(`${year}-0${month}-${day}`)\r\n            }else{\r\n            console.log(`${year}-${month}-${day}`)\r\n            setFecha1(`${year}-${month}-${day}`)\r\n            }\r\n\r\n        const objReporte = {\r\n            salida: Date.now(),\r\n            aprobado: 1,\r\n            repuestos: repuestos,\r\n            costo: costo\r\n        }\r\n\r\n        const EditarReparaciones = async () => {\r\n            const resultado = await axios.patch(url, objReporte)\r\n            if(resultado.status){\r\n                Swal.fire(\r\n                    'Salida de Taller',\r\n                    'Se ha dado la Salida Correctamente',\r\n                    'success'\r\n                )\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'Vuelve a Intentarlo'\r\n                })\r\n            }\r\n        }\r\n        EditarReparaciones()\r\n        setModal(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(trigger){\r\n            const queryRepara = async () => {\r\n                const response = await axios.get(`${apiProd}reparacions?filter[where][id]=${objeto}`)\r\n                setReparacion(response.data)\r\n                console.log(\"PRUEBAAAAA\", response.data);\r\n            }\r\n            setTrigger(false)\r\n            queryRepara()\r\n        }\r\n    },[setTrigger, objeto, apiProd, trigger])\r\n\r\n    const handleDarSalida = objt => {\r\n        setModal(true)\r\n        setTrigger(true)\r\n        setObjeto(objt.target.value)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        <li className=\"list-group-item d-flex justify-content-between align-item-center\" >\r\n            <p>\r\n                <span className=\"font-weight-bold text-info\">Placa: {repara.idCamion}{' '}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Cedi: {repara.cedi}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Ruta: {repara.ruta}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Entrada: {repara.entrada}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Salida: {repara.salida}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Reporte: {repara.reporte}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Aprobado: {repara.aprobado}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Repuestos: {repara.repuestos}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Costo: {repara.costo}</span>\r\n\r\n            </p>\r\n            <div>\r\n                {(inicioSesion && (usuarioIniciado.rol==='Admin'))?\r\n                <Button color=\"success\" value={repara.id} onClick={handleDarSalida}>Dar Salida</Button>\r\n                : null}\r\n                </div>\r\n                <Modal\r\n            isOpen={modal}\r\n            toggle={toggle}\r\n            className={className}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n    <ModalHeader toggle={toggle}>Dar Salida a Camion</ModalHeader>\r\n    <ModalBody>\r\n        <div className=\"form-group w-50\">\r\n    <h6>Repuestos:</h6>\r\n    <textarea\r\n        type=\"number\"\r\n        className=\"form-control mt-3  mr-3 mb-1\"\r\n        onChange={e => setRepuestos(e.target.value)}/>\r\n        </div>\r\n                                                            \r\n        <div className=\"form-group w-50\">\r\n        <h6>Costo ₡:</h6>\r\n        <input\r\n        type=\"number\"\r\n        className=\"form-control mt-3  mr-3 mb-1\"\r\n        onChange={e => setCosto(e.target.value)}/>\r\n        </div>                                                            \r\n        </ModalBody>\r\n        <ModalFooter>\r\n        <Button color=\"primary\" onClick={handleRepuestos}>Ingresar</Button>{' '}\r\n        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n        </Modal>         \r\n        </li>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default ReparacionLista;","C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\SuperGasLista.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallerTomza\\src\\components\\GasTomzaLista.jsx",[],["217","218"],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\index.jsx",[],["219","220"],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\App.jsx",["221"],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\Header.js",[],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\env\\environment.js",[],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\pages\\NotFoundPage.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\pages\\MenuPage.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\Camion.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\pages\\Login.jsx",["222"],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\Mantenimiento.jsx",["223"],"import axios from 'axios';\r\nimport React,{useState, Fragment, useEffect} from 'react'\r\nimport environment from '../env/environment'\r\nimport CamionLista from './MantenimientoLista'\r\nimport Error from '../pages/Error'\r\n\r\n\r\nfunction Mantenimiento({inicioSesion, usuarioIniciado}) {\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [camiones, guardarCamiones] = useState([])\r\n    const [error, guardarError] = useState(false)\r\n    const [rtv, setRtv] = useState('')\r\n\r\n    \r\n    const apiProd = environment.url\r\n    \r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTrigger(true);\r\n        if (rtv === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(trigger){\r\n            console.log(\"PASA\")\r\n            const consultaCamion = async () => {\r\n            const response = await axios.get(`${apiProd}camions?filter[where][rtv]=${rtv}`);\r\n            guardarCamiones(response.data)\r\n            console.log(\"CAMIONES\", response.data)\r\n            }\r\n            consultaCamion()\r\n            setTrigger(false)\r\n    }\r\n    }, [trigger, apiProd])\r\n    console.log(\"CAMIONES\", camiones)\r\n\r\n    return (\r\n        <Fragment>\r\n        <div class=\"col-md-8 mx-auto\">\r\n        <h1 className=\"mt-4 text-center\">Mantenimiento</h1>\r\n        {(error) ? <Error mensaje='Campo placa es obligatorio' /> : null}\r\n            <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                <label className=\"ml-3\">Rtv:</label>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group w-10 ml-3\">\r\n                    <select className=\"custom-select\" onChange={e => setRtv(e.target.value)}>\r\n                            <option disabled selected=\"\">Consultar...</option>\r\n                            <option value=\"Enero y Julio\">Enero y Julio</option>\r\n                            <option value=\"Febrero y Agosto\">Febrero y Agosto</option>\r\n                            <option value=\"Marzo y Setiembre\">Marzo y Setiembre</option>\r\n                            <option value=\"Mayo y Noviembre\">Mayo y Noviembre</option>\r\n                            <option value=\"Abril y Octubre\">Abril y Octubre</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Mantenimieto\" />\r\n                </form>\r\n\r\n                {(camiones.length === 0) ?\r\n                    <div className=\"alert alert-dismissible alert-light mt-3\">\r\n                        <h4 className=\"alert-heading text-center\" >No Hay Datos</h4>\r\n                        <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <ul className=\"list-group mt-3\">\r\n                            {camiones.map(camion => (\r\n                                <CamionLista\r\n                                    key={camion.id}\r\n                                    camion={camion}\r\n                                    inicioSesion={inicioSesion}\r\n                                    usuarioIniciado={usuarioIniciado}\r\n                                />\r\n                            ))}\r\n                        </ul>\r\n                        <ul className=\"list-group mt-3\">\r\n                                \r\n                        </ul>\r\n                    </div>\r\n                }\r\n                </div> \r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Mantenimiento\r\n","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\Combustible.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\CambioAceite.jsx",["224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"import axios from 'axios';\r\nimport React,{useState, Fragment, useEffect, useRef} from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport environment from '../env/environment'\r\nimport CambioALista from './CambioALista'\r\nimport Swal from 'sweetalert2';\r\nimport Error from '../pages/Error'\r\n\r\nfunction CambioAceite ({inicioSesion, usuarioIniciado}) {\r\n\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [modal, setModal] = useState(false);\r\n    const [cambios, setCambios] = useState([])\r\n    const [kilometraje, setKilometraje] = useState('')\r\n    const [placaModal, setPlacaModal] = useState('')\r\n    const [camionModal, setCamionModal] = useState([])\r\n    const [error, guardarError] = useState(false)\r\n    const [errorModal, guardarErrorModal] = useState(false)\r\n\r\n\r\n\r\n    const idCamion = useRef('')\r\n    const rutaRef = useRef('')\r\n\r\n    const referenciaRuta = rutaRef.current.value;\r\n\r\n    const apiProd = environment.url\r\n\r\n    const handlerButtonAgregar = () => {\r\n        setModal(!modal)\r\n        setModal(true)\r\n        setCamionModal([])\r\n    }\r\n\r\n    const handlerButtonIngresar = () => {\r\n        setModal(!modal)\r\n\r\n        // if (kilometraje === ''  ) {\r\n        //     guardarErrorModal(true)\r\n        //     console.log(guardarErrorModal)\r\n        //     setModal(true)\r\n        //     return;\r\n        // }\r\n        // guardarErrorModal(false);\r\n        //const url = `${apiProd}camions/${idCamion.current}`;\r\n        console.log(\"CAAAAMION\", camionModal);\r\n\r\n        idCamion.current = parseInt(camionModal[0].id)\r\n        console.log(\"ID CAMION\", idCamion.current)\r\n\r\n        console.log('Kilometraje Inicial', camionModal[0].kmInicial);\r\n\r\n        const limite = (parseInt(camionModal[0].kmInicial) + 11000)\r\n        console.log('LIMITE', limite);\r\n\r\n        const sumado = (parseInt(camionModal[0].kmTotal) + parseInt(kilometraje))\r\n        console.log('SUMADO', sumado);\r\n       \r\n        \r\n        if(sumado < limite) {\r\n            \r\n        const objCamion = {\r\n            kmTotal: sumado,\r\n            cambio: 0\r\n        }\r\n            console.log('No ocupa cambio');\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                        Swal.fire(\r\n                            'Reporte Agregado',\r\n                            'Se ha agregado Correctamente',\r\n                            'success'\r\n                        )\r\n                    }else{\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: 'Vuelve a Intentarlo'\r\n                        })\r\n                    }\r\n            }\r\n            EditarCamion()\r\n        } else{\r\n            const objCamion = {\r\n                kmInicial: sumado,\r\n                kmTotal: sumado,\r\n                cambio: 1\r\n            }\r\n            console.log('Ocupa cambio')\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                        Swal.fire(\r\n                            'Reporte Agregado',\r\n                            'Se ha agregado Correctamente',\r\n                            'success'\r\n                        )\r\n                    }else{\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: 'Vuelve a Intentarlo'\r\n                        })\r\n                    }\r\n            }\r\n            EditarCamion()\r\n        }\r\n    }\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTrigger(true)\r\n        console.log(\"RECARGA\");\r\n\r\n        // if (placa === '') {\r\n        //     guardarError(true)\r\n        //     console.log(guardarError)\r\n        //     return;\r\n        // }\r\n        // guardarError(false);\r\n    }\r\n//     const handlerButtonCamiones = () => {\r\n//         setTriggerCamion(true)\r\n//     // useEffect(() => {\r\n//         if(triggerCamion){\r\n//             const queryCamiones = async () => {\r\n//                 const response = await axios.get(`${apiProd}camions/?filter[where][placa]=${placa}`)\r\n//                 setCamiones(response.data)\r\n//             }\r\n//             queryCamiones();\r\n//             setTriggerCamion(false)\r\n//             console.log(\"CAMIIIIIIo\", camiones);\r\n//         }\r\n//     // })\r\n// }\r\n    const props1 = []\r\n    const {\r\n        className\r\n    } = props1;\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n\r\n    // const handlerButtonCambioAceite = () => {\r\n    //     setTrigger(true)\r\n    useEffect(() => {\r\n        if(trigger){\r\n            const queryCambios = async () => {\r\n                const response = await axios.get(`${apiProd}camions/?filter[where][cambio]=${1}`)\r\n                setCambios(response.data)\r\n            }\r\n            queryCambios();\r\n            setTrigger(false)\r\n        \r\n        }\r\n    }, [trigger, apiProd])\r\n// }\r\n\r\n        // const handlePlaca = async e => {\r\n        // e.preventDefault();\r\n        //         const queryCamion = async () => {\r\n        //             const response = await axios.get(`${apiProd}camions/?filter[where][placa]=${placaModal}`)\r\n        //             setCamionModal(response.data)\r\n        //         }\r\n        //         queryCamion()\r\n        // }\r\n\r\n        // <label className=\"ml-3\">Placa:</label>\r\n        //         <div className=\"form-row\">\r\n        //             <div className=\"form-group w-10 ml-3\">\r\n        //                 <input type=\"text\" className=\"form-control\" name=\"placa\" placeholder=\"Placa\" onChange={e => setPlaca(e.target.value)} />\r\n        //             </div>\r\n        //         </div>\r\n\r\n        // <Button color=\"info\" className=\"mt-2\" onClick={handlerButtonAgregar}>Agregar Reporte</Button>\r\n                //                                     <Modal\r\n                //                                         isOpen={modal}\r\n                //                                         toggle={toggle}\r\n                //                                         className={className}\r\n                //                                         aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //                                         centered>\r\n                //                                         <ModalHeader toggle={toggle}>Reporte Kilometraje</ModalHeader>\r\n                //                                         <ModalBody>\r\n                //                                         {(errorModal) ? <Error mensaje='Campo Kilometraje es Requerido' /> : null}\r\n\r\n                //                                         <div className=\"form-group w-50\">\r\n                //                                                 <h6>Placa:</h6>\r\n                //                                                 <input\r\n                //                                                     type=\"text\"\r\n                //                                                     className=\"form-control mt-3  mr-3 mb-1\"\r\n                //                                                     onChange={e => setPlacaModal(e.target.value)}\r\n                //                                                      />\r\n                //                                             <Button className=\"btn btn-success\" onClick={handlePlaca}>Cargar Camion</Button>\r\n                //                                             </div>\r\n\r\n                //                                             {(camionModal.length !== 0) ?\r\n                //                                             <div className=\"form-group w-50\">\r\n                //                                                 <h6>Ruta:</h6>\r\n                //                                                 <input\r\n                //                                                     id=\"disabledInput\"\r\n                //                                                     type=\"text\"\r\n                //                                                     className=\"form-control mt-3  mr-3 mb-1\"\r\n                //                                                     disabled=\"true\"\r\n                //                                                     ref={referenciaRuta}\r\n                //                                                     defaultValue={camionModal[0].ruta}\r\n                //                                                      />\r\n                //                                             </div> \r\n                //                                             : null}\r\n\r\n                //                                             {(camionModal.length !== 0) ?\r\n                //                                             <div className=\"form-group w-50\">\r\n                //                                                 <h6>Kilometraje:</h6>\r\n                //                                                 <input\r\n                //                                                     type=\"text\"\r\n                //                                                     className=\"form-control mt-3  mr-3 mb-1\"\r\n                //                                                     onChange={e => setKilometraje(e.target.value)}\r\n                //                                                      />\r\n                //                                             </div>\r\n                //                                              : null}\r\n                //                                         </ModalBody>\r\n                //                                         <ModalFooter>\r\n                //                                             <Button color=\"primary\" onClick={handlerButtonIngresar}>Ingresar</Button>{' '}\r\n                //                                                     <Button color=\"warning\" onClick={toggle}>Cancel</Button>\r\n                //                                         </ModalFooter>\r\n                //                                     </Modal>   \r\n\r\n    return (\r\n        <Fragment>\r\n        <div class=\"col-md-8 mx-auto\"> \r\n            <h1 className=\"mt-4 text-center\">Cambio de Aceite</h1>\r\n            {(error) ? <Error mensaje='Campo placa es obligatorio' /> : null}\r\n            <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                \r\n\r\n                <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Cambio\" />\r\n \r\n                {(cambios.length === 0) ?\r\n                    <div className=\"alert alert-dismissible alert-light mt-3\">\r\n                    <h4 className=\"alert-heading text-center\">No hay Datos</h4>\r\n                    <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n                    </div>\r\n                    :\r\n                        <ul className=\"list-group mt-5\">\r\n                    {cambios.map(cam => (\r\n                        <CambioALista \r\n                        key={cam.id}\r\n                        cam={cam}\r\n                        usuarioIniciado={usuarioIniciado}\r\n                        inicioSesion={inicioSesion}\r\n                        />\r\n                    ))}\r\n                    </ul>}\r\n                    \r\n            </form>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default CambioAceite\r\n","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\Reparacion.jsx",["240","241","242","243"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport environment from '../env/environment'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport ReparacionLista from './ReparacionLista'\r\nimport Swal from 'sweetalert2';\r\nimport Error from '../pages/Error'\r\n\r\nfunction CamionListaS({ camion }) {\r\n\r\n    return (\r\n        <option value={camion.placa} key={camion.placa}>{camion.placa} - {camion.marca} - {camion.ruta}</option>\r\n    );\r\n}\r\n\r\nfunction Reparacion({ inicioSesion, usuarioIniciado }) {\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [triggerA, setTriggerA] = useState(false)\r\n    const [triggerAgregar, setTriggerAgregar] = useState(false)\r\n    const [camiones, guardarCamiones] = useState([])\r\n    const [cami, guardarCamion] = useState('')\r\n    const [reporte, guardarReporte] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [ruta, guardarRuta] = useState('')\r\n    const [fecha, guardarFecha] = useState('')\r\n    const [placa, setPlaca] = useState('')\r\n    const [error, guardarError] = useState(false)\r\n    const [errorModal, guardarErrorModal] = useState(false)\r\n    const [fecha1, setFecha1] = useState(false)\r\n    const [reparaciones, guardarReparaciones] = useState([])\r\n    \r\n    // hooks consulta BD\r\n    const [triggerPlacaFecha, setTriggerPlacaFecha] = useState(false)\r\n    const [triggerPlaca, setTriggerPlaca] = useState(false)\r\n    const [triggerFecha, setTriggerFecha] = useState(false)\r\n\r\n    const apiProd = environment.url\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        //setTrigger(true);\r\n        //setTriggerA(true);\r\n\r\n        //if (fecha === '' || placa === '') {\r\n           //  guardarError(true)\r\n        //     console.log(guardarError)\r\n        //     return;\r\n        //}\r\n\r\n        if (placa !== '' && fecha !== ''){\r\n            setTriggerPlacaFecha(true)\r\n        }\r\n        if (fecha !== ''){\r\n            setTriggerFecha(true)\r\n        }\r\n        if (placa !== ''){\r\n            setTriggerPlaca(true)\r\n        }\r\n        guardarError(false);\r\n    }\r\n\r\n        useEffect(()=>{\r\n            if (triggerPlacaFecha){\r\n                const consultaPlacaFecha = async () => {\r\n                    const response = await axios.get(`${apiProd}reparacions?filter[where][entrada]=${fecha}&filter[where][idCamion]=${placa}`)\r\n                    guardarReparaciones(response.data)\r\n                    setTriggerPlacaFecha(false)\r\n                }\r\n                consultaPlacaFecha()\r\n            }\r\n            if (triggerFecha){\r\n                const consultaFecha = async () => {\r\n                    const response = await axios.get(`${apiProd}reparacions?filter[where][entrada]=${fecha}`)\r\n                    guardarReparaciones(response.data)\r\n                    setTriggerFecha(false)\r\n                }\r\n                consultaFecha()\r\n            }\r\n            if (triggerPlaca){\r\n                const consultaPlaca = async () => {\r\n                    const response = await axios.get(`${apiProd}reparacions?filter[where][idCamion]=${placa}`)\r\n                    guardarReparaciones(response.data)\r\n                    setTriggerPlaca(false)\r\n                }\r\n                consultaPlaca()\r\n            }\r\n        })\r\n\r\n    const props1 = []\r\n\r\n    const {\r\n        className\r\n    } = props1;\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    useEffect(() => {\r\n        if (trigger) {\r\n            console.log(\"PASA\")\r\n            const consultaCamion = async () => {\r\n                const response = await axios.get(`${apiProd}camions`);\r\n                guardarCamiones(response.data)\r\n                console.log(\"CAMIONES\", response.data)\r\n            }\r\n            consultaCamion()\r\n            setTrigger(false)\r\n        }\r\n    })\r\n\r\n    const camionSort = camiones.sort(camiones.placa);\r\n    console.log(\"Sorteado\", camionSort);\r\n\r\n    console.log(\"CAMIONES\", camiones)\r\n\r\n    useEffect(() => {\r\n        if (triggerA) {\r\n            if (fecha !== '' && placa !== '') {\r\n                const consultaRepa = async () => {\r\n                    const response = await axios.get(`${apiProd}reparacions?filter[where][entrada]=${fecha}&filter[where][idCamion]=${placa}`)\r\n                    guardarReparaciones(response.data)\r\n                    setTriggerA(false)\r\n                }\r\n                consultaRepa()\r\n            } else {\r\n                guardarError(true)\r\n            }\r\n        }\r\n    })\r\n    console.log(\"REPA\", reparaciones)\r\n\r\n    const handlerButtonAgregar = () => {\r\n        setModal(!modal)\r\n        setModal(true)\r\n        setTrigger(true)\r\n        setTriggerAgregar(true)\r\n    }\r\n    //para almacenar el cedi en la reparacion\r\n\r\n    const handlerButtonIngresar = () => {\r\n\r\n        setModal(false);\r\n\r\n        if (reporte === '' || cami === '') {\r\n            guardarErrorModal(true)\r\n            console.log(guardarErrorModal)\r\n            setModal(true)\r\n            return;\r\n        }\r\n         guardarErrorModal(false);\r\n\r\n        let date = new Date()\r\n\r\n        let day = date.getDate()\r\n        let month = date.getMonth() + 1\r\n        let year = date.getFullYear()\r\n\r\n        if (month < 10) {\r\n            console.log(`${year}-${month}-${day}`)\r\n            setFecha1(`${year}-0${month}-${day}`)\r\n        } else {\r\n            console.log(`${year}-${month}-${day}`)\r\n            setFecha1(`${year}-${month}-${day}`)\r\n        }\r\n\r\n        const cedi = usuarioIniciado.cedi\r\n        //cuando se ingresa un reporte \"aprobado\" entra como False\r\n        //0= False\r\n        //1= True\r\n        const repObj = {\r\n            cedi: cedi,\r\n            idCamion: cami,\r\n            reporte: reporte,\r\n            entrada: Date.now(),\r\n            aprobado: 0,\r\n            ruta: ruta,\r\n            repuestos: \"\",\r\n            costo: \"\"\r\n        }\r\n        console.log(\"OBJETO\", repObj);\r\n\r\n        if (triggerAgregar) {\r\n            try {\r\n                const AgregarRepa = async () => {\r\n                    const resultado = await axios.post(`${apiProd}reparacions`, repObj);\r\n                    if (resultado.status === 200) {\r\n                        console.log(\"Agregado\");\r\n                        Swal.fire(\r\n                            'Solicitud de Reparacion',\r\n                            'Se ha creado correctamente',\r\n                            'success'\r\n                        )\r\n                        const bita = await axios.post(`${apiProd}bitacoraTallers`, {\r\n                            idUsuario: usuarioIniciado.id,\r\n                            accion: `Ha ingresado una reparacion el usuario: ${usuarioIniciado.name}`,\r\n                            fecha: Date.now()\r\n                        });\r\n                        if (bita.status === 200) {\r\n                            console.log('se ha agregado a la bitacora');\r\n                        }\r\n                    }\r\n                }\r\n                AgregarRepa()\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n            setTriggerAgregar(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n        <div className=\"col-md-8 mx-auto\">\r\n        <h1 className=\"text-center mt-4\"> Reparaciones </h1>\r\n        {/*(error) ? <Error mensaje='Campo, placa y fecha son obligatorios' /> : null*/}\r\n        <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n            <label className=\"ml-3\">Fecha:</label>\r\n            <div className=\"form-row\">\r\n\r\n                <div className=\"form-group w-25 ml-3\">\r\n                 <input type=\"date\" className=\"form-control\" name=\"fecha_reparacion\" onChange={e => guardarFecha(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group w-10 ml-3\">\r\n                     <input type=\"text\" className=\"form-control\" name=\"placa\" placeholder=\"Placa\" onChange={e => setPlaca(e.target.value)} />\r\n                </div>\r\n            </div>\r\n\r\n            <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Reparación\" />\r\n\r\n            {(inicioSesion && (usuarioIniciado.rol === 'Admin' || usuarioIniciado.rol === 'Supervisor')) ?\r\n                <Button color=\"info\" className=\"mt-2\" onClick={handlerButtonAgregar}>Agregar Reparación</Button>\r\n                : null}\r\n              \r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggle}\r\n                className={className}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n                <ModalHeader toggle={toggle}>Reparación</ModalHeader>\r\n                <ModalBody>\r\n                    {(errorModal) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n                    <div className=\"form-group w-50\">\r\n                        <label> Camion:</label>\r\n                        <select className=\"custom-select\" onChange={e => guardarCamion(e.target.value)}>\r\n                            <option value=\"\">Camion</option>\r\n                            {camionSort.map(camion => (\r\n                                <CamionListaS\r\n                                    key={camion.placa}\r\n                                    camion={camion}\r\n                                />))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group w-50\">\r\n                        <h6>Ruta:</h6>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control mt-3  mr-3 mb-1\"\r\n                            onChange={e => guardarRuta(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group w-50\">\r\n                        <h6>Reporte:</h6>\r\n                        <textarea\r\n                            type=\"text-area\"\r\n                            className=\"form-control mt-3  mr-3 mb-1\"\r\n                            onChange={e => guardarReporte(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handlerButtonIngresar}>Ingresar</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            {(reparaciones.length === 0) ?\r\n                <div className=\"alert alert-dismissible alert-light mt-3\">\r\n                    <h4 className=\"alert-heading text-center\">No hay Datos</h4>\r\n                    <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n                </div>\r\n                :\r\n                <ul className=\"list-group mt-5\">\r\n                    {reparaciones.map(repara => (\r\n                        <ReparacionLista\r\n                            key={repara.id}\r\n                            repara={repara}\r\n                            inicioSesion={inicioSesion}\r\n                            usuarioIniciado={usuarioIniciado}\r\n                        />\r\n                    ))}\r\n                </ul>}\r\n        </form>\r\n\r\n        </div>\r\n        </Fragment >\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Reparacion;","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\CombuGas.jsx",["244","245"],"import React, { Fragment, useState, useRef, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport environment from '../env/environment'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Error from '../pages/Error'\r\nimport Swal from 'sweetalert2';\r\nimport GTLista from './GasTomzaLista';\r\n\r\nconst GasTomza = ({ usuarioIniciado, gas, setTriggerApp, inicioSesion }) => {\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [error, guardarError] = useState(false)\r\n    const [triggerBod, setTriggerBod] = useState(false)\r\n    const [triggerCam, setTriggerCam] = useState(false)\r\n    const [triggerGas, setTriggerGas] = useState(false)\r\n    const [fecha, guardarFecha] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [modalCisterna, setModalCisterna] = useState(false);\r\n    const [errorModal, guardarErrorModal] = useState(false)\r\n    const [placaModal, setPlacaModal] = useState('')\r\n    const [camionModal, setCamionModal] = useState([])\r\n    const [marcaIni, setMarcaIni] = useState(\"\");\r\n    const [marcaFin, setMarcaFin] = useState(\"\")\r\n    const [kilometraje, setKilometraje] = useState('')\r\n    const [gasolina, setGasolina] = useState([])\r\n    const [tipo, setTipo] = useState('')\r\n    const [codigo, setCodigo] = useState(0)\r\n\r\n\r\n    const apiProd = environment.url\r\n\r\n    const rutaRef = useRef('')\r\n    const referenciaRuta = rutaRef.current.value;\r\n\r\n    const bodegaRef = useRef('')\r\n    bodegaRef.current = parseInt(gas[0].id)\r\n\r\n    const idCamion = useRef('')\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTriggerGas(true)\r\n\r\n        if (fecha === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (triggerGas) {\r\n            console.log('TRIGGER', triggerGas);\r\n            console.log('FECHAAA', fecha);\r\n            const queryGas = async () => {\r\n                const response = await axios.get(`${apiProd}descarga_gasols?filter[where][fecha]=${fecha}&filter[where][cedi]=Gas Tomza`)\r\n                setGasolina(response.data)\r\n                console.log(\"PUTAsal\", response.data\r\n\r\n                );\r\n                console.log(\"Largo\", gasolina.length);\r\n            }\r\n            queryGas()\r\n        }\r\n        setTriggerGas(false)\r\n\r\n    })\r\n\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const toggle1 = () => setModalCisterna(!modalCisterna);\r\n\r\n    const handleCisterna = () => {\r\n        setModalCisterna(true)\r\n        setTriggerApp(true)\r\n    }\r\n\r\n    const handleLleno = () => {\r\n        const codi = 202107\r\n\r\n        const objLleno = {\r\n            cap_actual: ((gas[0].cap_actual) + (7580))\r\n        }\r\n        const codig = parseInt(codigo)\r\n\r\n\r\n        if (codig === codi) {\r\n            console.log(\"IGUaL\");\r\n            const RellenoCisterna = async () => {\r\n                const result = await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objLleno)\r\n                if (result.status === 200) {\r\n                    setTriggerApp(true)\r\n                    Swal.fire(\r\n                        `Se recargado la Cisterna`,\r\n                        'Se ha ingresado correctamente',\r\n                        'success'\r\n                    )\r\n                    setModalCisterna(false)\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: 'Vuelve a Intentarlo'\r\n                    })\r\n                }\r\n            }\r\n            RellenoCisterna()\r\n\r\n        }\r\n        setTriggerApp(true)\r\n\r\n\r\n        console.log(\"OBJETO\", objLleno);\r\n    }\r\n\r\n    const handlerButtonAgregar = () => {\r\n        setModal(!modal)\r\n        setCamionModal([])\r\n        setMarcaIni(\"\")\r\n        setMarcaFin(\"\")\r\n        setKilometraje(\"\")\r\n        guardarErrorModal(false);\r\n        setTrigger(true)\r\n        setTriggerBod(true)\r\n        setTriggerCam(true)\r\n    }\r\n\r\n    console.log(\"NIGGA\", (gas[0].cap_actual - (marcaFin - marcaIni)));\r\n    const handlerButtonIngresar = () => {\r\n\r\n\r\n\r\n        if (placaModal === \"\" || marcaIni === \"\" || marcaFin === \"\" || kilometraje === \"\" || tipo === \"\") {\r\n            guardarErrorModal(true)\r\n            console.log(guardarErrorModal)\r\n            setModal(true);\r\n            return;\r\n        }\r\n        guardarErrorModal(false);\r\n        setModal(false);\r\n        const llenado = marcaFin - marcaIni\r\n        const rebajoBodega = (gas[0].cap_actual - llenado)\r\n\r\n        if ((gas[0].cap_actual) - (rebajoBodega) >= 3000) {\r\n\r\n            const objGasolina = {\r\n                placa_camion: camionModal[0].placa,\r\n                fecha: Date.now(),\r\n                ruta: camionModal[0].ruta,\r\n                descarga: llenado,\r\n                cedi: usuarioIniciado.cedi,\r\n                tipo: tipo\r\n            }\r\n            console.log(\"GASOLINA\", objGasolina);\r\n\r\n\r\n            console.log(\"BODEGA\", rebajoBodega);\r\n\r\n            const objBodega = {\r\n                cap_actual: (rebajoBodega)\r\n            }\r\n            console.log(\"ACtual\", gas[0].cap_actual);\r\n            console.log(\"rebajado\", objBodega);\r\n\r\n            if (trigger) {\r\n                setTriggerApp(true)\r\n                const AgregarCargaGas = async () => {\r\n                    const result = await axios.post(`${apiProd}descarga_gasols`, objGasolina)\r\n                    if (result.status === 200) {\r\n                        console.log(\"DESCARGA\");\r\n                    }\r\n                    setTrigger(false)\r\n                }\r\n                AgregarCargaGas();\r\n            }\r\n            setTriggerApp(false)\r\n\r\n            if (triggerBod) {\r\n                console.log(\"BODEGA BAJA\");\r\n                const EditarBodega = async () => {\r\n                    const result = await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objBodega)\r\n                    if (result.status === 200) {\r\n                        Swal.fire(\r\n                            `Se han agredado ${llenado}Lts al camión placa ${camionModal[0].placa}`,\r\n                            'Se ha ingresado correctamente',\r\n                            'success'\r\n                        )\r\n                        const bita = await axios.post(`${apiProd}bitacoraTallers`, {\r\n                            idUsuario: usuarioIniciado.id,\r\n                            accion: `Ha ingresado una descarga de combustible el usuario: ${usuarioIniciado.name}`,\r\n                            fecha: Date.now()\r\n                        });\r\n                        if (bita.status === 200) {\r\n                            console.log('se ha agregado a la bitacora');\r\n                        }\r\n                    }\r\n                    setTriggerBod(false)\r\n                    setTriggerApp(true)\r\n                }\r\n                EditarBodega()\r\n\r\n                idCamion.current = parseFloat(camionModal[0].id)\r\n                console.log(\"PREMIOO\", idCamion.current);\r\n            }\r\n\r\n            if (triggerCam) {\r\n\r\n                console.log(\"CAAAAMION\", camionModal);\r\n\r\n                idCamion.current = parseInt(camionModal[0].id)\r\n                console.log(\"ID CAMION\", idCamion.current)\r\n\r\n                console.log('Kilometraje Inicial', camionModal[0].kmInicial);\r\n\r\n                const limite = (parseInt(camionModal[0].kmInicial) + 11000)\r\n                console.log('LIMITE', limite);\r\n\r\n                const sumado = (parseInt(camionModal[0].kmTotal) + parseInt(kilometraje))\r\n                console.log('SUMADO', sumado);\r\n\r\n                if (sumado < limite) {\r\n\r\n                    const objCamion = {\r\n                        kmTotal: sumado,\r\n                        cambio: 0\r\n                    }\r\n                    console.log('No ocupa cambio');\r\n                    const EditarCamion = async () => {\r\n                        const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                        if (resultado.status === 200) {\r\n                            console.log('MENORR');\r\n                        }\r\n                    }\r\n                    EditarCamion()\r\n                } else {\r\n                    const objCamion = {\r\n                        kmInicial: sumado,\r\n                        kmTotal: sumado,\r\n                        cambio: 1\r\n                    }\r\n                    console.log('Ocupa cambio')\r\n                    const EditarCamion = async () => {\r\n                        const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                        if (resultado.status === 200) {\r\n                            console.log(\"MAYORR\");\r\n                        }\r\n                    }\r\n                    EditarCamion()\r\n\r\n                }\r\n            }\r\n\r\n        } else {\r\n            console.log(\"BODEGA ALTA\");\r\n            Swal.fire(\r\n                `El tanque principal está en el mínimo`,\r\n                'Solicite llenado de tanque',\r\n                'error'\r\n            )\r\n            setModal(true)\r\n        }\r\n    }\r\n\r\n    const handlePlaca = () => {\r\n\r\n        if (placaModal !== '') {\r\n            console.log(\"PASAAASS\");\r\n            const queryCamion = async () => {\r\n                const response = await axios.get(`${apiProd}camions/?filter[where][placa]=${placaModal}`)\r\n                if (response.data.length === 0) {\r\n                    Swal.fire(\r\n                        `Placa ${placaModal}, no encontrada`,\r\n                        'Intenta nuevamente',\r\n                        'error',\r\n                    )\r\n                    setCamionModal([])\r\n                }\r\n                setCamionModal(response.data)\r\n            }\r\n            queryCamion()\r\n        } else {\r\n            Swal.fire(\r\n                'Espacio Necesario',\r\n                'Intente nuevamente',\r\n                'error',\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div class=\"col-md-8 mx-auto\">\r\n                <h1 className=\"mt-4 text-center\">Combustible Gas Tomza</h1>\r\n                {(error) ? <Error mensaje='Campo fecha son obligatorios' /> : null}\r\n                <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                    <label className=\"ml-3\">Fecha:</label>\r\n                    <div className=\"form-row\">\r\n\r\n                        <div className=\"form-group w-25 ml-3\">\r\n                            <input type=\"date\" className=\"form-control\" name=\"fecha_reparacion\" onChange={e => guardarFecha(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Gasto\" />\r\n\r\n                    <Button color=\"info\" className=\"mt-2\" onClick={handlerButtonAgregar}>Agregar Gasto</Button>\r\n\r\n                    <Button color=\"success\" className=\"mt-2 ml-3\" onClick={handleCisterna}>Cisternas Combustibles</Button>\r\n\r\n                    <Modal\r\n                        isOpen={modal}\r\n                        toggle={toggle}\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                        centered>\r\n                        <ModalHeader toggle={toggle}>Combustible</ModalHeader>\r\n                        <ModalBody>\r\n                            {(errorModal) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n                            <div className=\"form-group w-50\">\r\n                                <h6>Placa:</h6>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                    onChange={e => setPlacaModal(e.target.value)}\r\n                                />\r\n                                <Button className=\"btn btn-success mt-2\" onClick={handlePlaca}>Cargar Camion</Button>\r\n                            </div>\r\n\r\n                            {(camionModal.length !== 0) ?\r\n                                <div className=\"form-group w-50\">\r\n                                    <h6>Ruta:</h6>\r\n                                    <input\r\n                                        id=\"disabledInput\"\r\n                                        type=\"text\"\r\n                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                        disabled=\"true\"\r\n                                        ref={referenciaRuta}\r\n                                        defaultValue={camionModal[0].ruta}\r\n                                    />\r\n                                </div>\r\n                                : null}\r\n\r\n                            {(camionModal.length !== 0) ?\r\n                                <div className=\"form-group w-50\">\r\n                                    <label>Tipo:</label>\r\n                                    <select className=\"custom-select\" onChange={e => setTipo(e.target.value)}>\r\n                                        <option value=\"\">Tipo</option>\r\n                                        <option value=\"Recope\">Viajes a Recope</option>\r\n                                        <option value=\"Aquilados\">Viaje de Alquilados</option>\r\n                                        <option value=\"Metalco\">Metalco</option>\r\n                                        <option value=\"La Cruz\">La Cruz</option>\r\n                                        <option value=\"Carreta Guapiles\">Carreta Guápiles</option>\r\n                                        <option value=\"Tanden\">Tanden</option>\r\n                                        <option value=\"Carreta Sur\">Carreta Zona Sur</option>\r\n                                        <option value=\"Traslados\">Traslados</option>\r\n                                    </select>\r\n                                </div>\r\n                                : null}\r\n\r\n                            {(camionModal.length !== 0) ?\r\n                                <div className=\"form-group w-50\">\r\n                                    <h6>Marca Inicial:</h6>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                        onChange={e => setMarcaIni(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                : null}\r\n\r\n                            {(camionModal.length !== 0) ?\r\n                                <div className=\"form-group w-50\">\r\n                                    <h6>Marca Final:</h6>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                        onChange={e => setMarcaFin(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                : null}\r\n\r\n                            {(camionModal.length !== 0) ?\r\n                                <div className=\"form-group w-50\">\r\n                                    <h6>Kilometraje:</h6>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                        onChange={e => setKilometraje(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                : null}\r\n\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={handlerButtonIngresar}>Ingresar</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <Modal\r\n                        isOpen={modalCisterna}\r\n                        toggle1={toggle1}\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                        centered>\r\n                        <ModalHeader toggle1={toggle1}>Recarga Cisterna</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"form-group w-50\">\r\n                                <h6>Código:</h6>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                    onChange={e => setCodigo(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={handleLleno}>Ingresar</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={toggle1}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    {(gasolina.length === 0) ?\r\n                        <div className=\"alert alert-dismissible alert-light mt-3\">\r\n                            <h4 className=\"alert-heading text-center\">No hay Datos</h4>\r\n                            <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n                        </div>\r\n                        :\r\n                        <ul className=\"list-group mt-5\">\r\n                            {gasolina.map(gaso => (\r\n                                <GTLista\r\n                                    key={gaso.id}\r\n                                    gaso={gaso}\r\n                                    usuarioIniciado={usuarioIniciado}\r\n                                    inicioSesion={inicioSesion}\r\n                                />\r\n                            ))}\r\n                        </ul>\r\n                    }\r\n\r\n                </form>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\n\r\nexport default GasTomza","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\CombuSuper.jsx",["246","247"],"import React, { Fragment, useState, useRef, useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport environment from '../env/environment'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Error from '../pages/Error'\r\nimport Swal from 'sweetalert2';\r\nimport SPLista from './SuperGasLista';\r\n\r\nconst SuperGas = ({usuarioIniciado, superG, setTriggerApp,inicioSesion}) => {\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [error, guardarError] = useState(false)\r\n    const [triggerBod, setTriggerBod] = useState(false)\r\n    const [triggerCam, setTriggerCam] = useState(false)\r\n    const [triggerGas, setTriggerGas] = useState(false)\r\n    const [fecha, setFecha] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [modalCisterna, setModalCisterna] = useState(false);\r\n    const [errorModal, guardarErrorModal] = useState(false)\r\n    const [placaModal, setPlacaModal] = useState('')\r\n    const [camionModal, setCamionModal] = useState([])\r\n    const [marcaIni, setMarcaIni] = useState(\"\");\r\n    const [marcaFin, setMarcaFin] = useState(\"\")\r\n    const [kilometraje, setKilometraje] = useState('')\r\n    const [gasolina, setGasolina] = useState([])\r\n    const [tipo, setTipo] = useState('') \r\n    const [codigo, setCodigo] = useState(0)\r\n\r\n\r\n    const apiProd = environment.url\r\n\r\n    const rutaRef = useRef('')\r\n    const referenciaRuta = rutaRef.current.value;\r\n\r\n    const bodegaRef = useRef('')\r\n    bodegaRef.current = parseInt(superG[0].id)\r\n\r\n\r\n    const idCamion = useRef('')\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTriggerGas(true)\r\n\r\n        if (fecha === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false)\r\n    }\r\n\r\n    // const handleConsulta = () => {\r\n    //     setTriggerGas(true)\r\n    // }\r\n\r\n    console.log('TRIGGER', triggerGas);\r\n    useEffect(() => {\r\n        if(triggerGas){\r\n            console.log('TRIGGER', triggerGas);\r\n            console.log('FECHAAA', fecha);\r\n            const queryGas = async () => {\r\n                const response = await axios.get(`${apiProd}descarga_gasols?filter[where][fecha]=${fecha}&filter[where][cedi]=Super Gas`)\r\n                setGasolina(response.data)\r\n                console.log(\"PUTAsal\", response.data\r\n                \r\n                );\r\n                console.log(\"Largo\", gasolina.length);\r\n            }\r\n            queryGas()\r\n        }\r\n        setTriggerGas(false)\r\n\r\n    })\r\n\r\n    console.log(\"GASOLINA\", gasolina);\r\n\r\n\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const toggle1 = () => setModalCisterna(!modalCisterna);\r\n\r\n    const handleCisterna = () => {\r\n        setModalCisterna(true)\r\n        setTriggerApp(true)\r\n    }\r\n\r\n    const handleLleno = () => {\r\n        const codi = 202107\r\n\r\n        console.log(\"Bodega\", superG[0].cap_actual);\r\n\r\n        const objLleno = {\r\n            cap_actual: ((superG[0].cap_actual) + (3790))\r\n        }\r\n\r\n        const codig = parseInt(codigo)\r\n\r\n        if(codig === codi){\r\n            console.log(\"IGUaL\");\r\n            const RellenoCisterna = async () => {\r\n                const result = await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objLleno)\r\n                if(result.status === 200){\r\n                    Swal.fire(\r\n                        `Se ha recargado la Cisterna`,\r\n                        'Se ha ingresado correctamente',\r\n                        'success'\r\n                    )\r\n                    setModalCisterna(false)\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: 'Vuelve a Intentarlo'\r\n                    })\r\n                }\r\n            }\r\n            RellenoCisterna()\r\n            setTriggerApp(true)\r\n\r\n        }\r\n\r\n        console.log(\"OBJETO\", objLleno);\r\n    }\r\n\r\n    const handlerButtonAgregar = () => {\r\n        setModal(!modal)\r\n        setCamionModal([])\r\n        setMarcaIni(\"\")\r\n        setMarcaFin(\"\")\r\n        setKilometraje(\"\")\r\n        guardarErrorModal(false);\r\n        setTrigger(true)\r\n        setTriggerBod(true)\r\n        setTriggerCam(true)\r\n    }\r\n\r\n    const handlerButtonIngresar = () => {\r\n              \r\n        if (placaModal === \"\" || marcaIni === \"\" || marcaFin === \"\" || kilometraje === \"\" || tipo === \"\") {\r\n            guardarErrorModal(true)\r\n            console.log(guardarErrorModal)\r\n            setModal(true);\r\n            return;\r\n        }\r\n        guardarErrorModal(false);\r\n        setModal(false);\r\n\r\n        console.log(\"CAMION\", camionModal);\r\n\r\n        const llenado = marcaFin - marcaIni\r\n        console.log('Resta', llenado);\r\n\r\n        const objGasolina = {\r\n            placa_camion: camionModal[0].placa,\r\n            fecha: Date.now(),\r\n            ruta: camionModal[0].ruta,\r\n            descarga: llenado,\r\n            cedi: usuarioIniciado.cedi,\r\n            tipo: tipo\r\n        }\r\n        console.log(\"GASOLINA\", objGasolina);\r\n\r\n        const rebajoBodega = (superG[0].cap_actual - llenado)\r\n\r\n        console.log(\"BODEGA\", rebajoBodega);\r\n\r\n        const objBodega = {\r\n            cap_actual: (rebajoBodega)\r\n        }\r\n        console.log(\"ACtual\", superG[0].cap_actual);\r\n        console.log(\"rebajado\", objBodega);\r\n\r\n        if(trigger){\r\n            setTriggerApp(true)\r\n            const AgregarCargaGas = async() => {\r\n                const result = await axios.post(`${apiProd}descarga_gasols`, objGasolina)\r\n                if(result.status === 200){\r\n                    console.log(\"DESCARGA\");\r\n                }\r\n                setTrigger(false)\r\n            }\r\n            AgregarCargaGas();\r\n        }\r\n        setTriggerApp(false)\r\n\r\n\r\n        if(triggerBod){\r\n        const EditarBodega = async() => {\r\n            const result =  await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objBodega)\r\n            if(result.status === 200){\r\n                Swal.fire(\r\n                    `Se han agredado ${llenado}Lts al camión ${camionModal[0].placa}`,\r\n                        'Se ha ingresado correctamente',\r\n                        'success'\r\n                )\r\n                const bita = await axios.post(`${apiProd}bitacoraTallers`, {\r\n                    idUsuario: usuarioIniciado.id,\r\n                    accion: `Ha ingresado una descarga de combustible el usuario: ${usuarioIniciado.name}`,\r\n                    fecha: Date.now()\r\n                });\r\n                if(bita.status === 200){\r\n                    console.log('se ha agregado a la bitacora');\r\n\r\n                }\r\n            }\r\n            setTriggerBod(false)\r\n            setTriggerApp(true)\r\n\r\n        }\r\n        EditarBodega()\r\n        idCamion.current = parseFloat(camionModal[0].id)\r\n        console.log(\"PREMIOO\", idCamion.current);\r\n        \r\n    }\r\n\r\n    if(triggerCam){\r\n\r\n        console.log(\"CAAAAMION\", camionModal);\r\n\r\n        idCamion.current = parseInt(camionModal[0].id)\r\n        console.log(\"ID CAMION\", idCamion.current)\r\n\r\n        console.log('Kilometraje Inicial', camionModal[0].kmInicial);\r\n\r\n        const limite = (parseInt(camionModal[0].kmInicial) + 11000)\r\n        console.log('LIMITE', limite);\r\n\r\n        const sumado = (parseInt(camionModal[0].kmTotal) + parseInt(kilometraje))\r\n        console.log('SUMADO', sumado);\r\n\r\n        if(sumado < limite) {\r\n            \r\n        const objCamion = {\r\n            kmTotal: sumado,\r\n            cambio: 0\r\n        }\r\n            console.log('No ocupa cambio');\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                        console.log('MENORR');\r\n                    }\r\n            }\r\n            EditarCamion()\r\n        } else{\r\n            const objCamion = {\r\n                kmInicial: sumado,\r\n                kmTotal: sumado,\r\n                cambio: 1\r\n            }\r\n            console.log('Ocupa cambio')\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                       console.log(\"MAYORR\");\r\n                    }\r\n            }\r\n            EditarCamion()\r\n            \r\n        }\r\n    }\r\n    }\r\n    \r\n    const handlePlaca = () => {\r\n\r\n        if(placaModal !== ''){\r\n        console.log(\"PASAAASS\");\r\n                const queryCamion = async () => {\r\n                    const response = await axios.get(`${apiProd}camions/?filter[where][placa]=${placaModal}`)\r\n                    if(response.data.length === 0){\r\n                        Swal.fire(\r\n                            `Placa ${placaModal}, no encontrada`,\r\n                            'Intenta nuevamente',\r\n                            'error',\r\n                        )\r\n                        setCamionModal([])\r\n                    }\r\n                    setCamionModal(response.data)\r\n                }\r\n                queryCamion()\r\n        }else{\r\n            Swal.fire(\r\n                'Espacio Necesario',\r\n                'Intente nuevamente',\r\n                'error',\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        <div class=\"col-md-8 mx-auto\">\r\n            <h1 className=\"mt-4 text-center\">Combustible Super Gas\r\n            </h1>\r\n            {(error) ? <Error mensaje='Campo fecha son obligatorios' /> : null}\r\n            <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                <label className=\"ml-3\">Fecha:</label>\r\n                <div className=\"form-row\">\r\n\r\n                    <div className=\"form-group w-25 ml-3\">\r\n                        <input type=\"date\" className=\"form-control\" name=\"fecha_reparacion\" onChange={e => setFecha(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Gasto\" />\r\n\r\n                <Button color=\"info\" className=\"mt-2\" onClick={handlerButtonAgregar}>Agregar Gasto</Button>\r\n\r\n                <Button color=\"success\" className=\"mt-2 ml-3\" onClick={handleCisterna}>Cisternas Combustibles</Button>\r\n\r\n                                                    <Modal\r\n                                                        isOpen={modal}\r\n                                                        toggle={toggle}\r\n                                                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                                        centered>\r\n                                                        <ModalHeader toggle={toggle}>Combustible</ModalHeader>\r\n                                                        <ModalBody>\r\n                                                        {(errorModal) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n                                                            <div className=\"form-group w-50\">\r\n                                                                <h6>Placa:</h6>\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                    onChange={e => setPlacaModal(e.target.value)}\r\n                                                                     />\r\n                                                                     <Button className=\"btn btn-success mt-2\" onClick={handlePlaca}>Cargar Camion</Button>\r\n                                                            </div>\r\n\r\n                                                            {(camionModal.length !== 0) ?\r\n                                                                <div className=\"form-group w-50\">\r\n                                                                    <h6>Ruta:</h6>\r\n                                                                    <input\r\n                                                                        id=\"disabledInput\"\r\n                                                                        type=\"text\"\r\n                                                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                        disabled=\"true\"\r\n                                                                        ref={referenciaRuta}\r\n                                                                        defaultValue={camionModal[0].ruta}\r\n                                                                         />\r\n                                                                </div>\r\n                                                                : null}\r\n\r\n                                                                {(camionModal.length !== 0) ?\r\n                                                                    <div className=\"form-group w-50\">\r\n                                                                        <label>Tipo:</label>\r\n                                                                       <select className=\"custom-select\"  onChange={e => setTipo(e.target.value)}>\r\n                                                                       <option value=\"\">Tipo</option>\r\n                                                                       <option value=\"Recope\">Viajes a Recope</option>\r\n                                                                       <option value=\"Aquilados\">Viaje de Alquilados</option>\r\n                                                                       <option value=\"Metalco\">Metalco</option>\r\n                                                                       <option value=\"La Cruz\">La Cruz</option>\r\n                                                                       <option value=\"Carreta Guapiles\">Carreta Guápiles</option>\r\n                                                                       <option value=\"Tanden\">Tanden</option>\r\n                                                                       <option value=\"Carreta Sur\">Carreta Zona Sur</option>\r\n                                                                       <option value=\"Traslados\">Traslados</option>\r\n                                                                       </select>\r\n                                                                    </div>\r\n                                                                    : null}\r\n\r\n                                                                {(camionModal.length !== 0) ?\r\n                                                                    <div className=\"form-group w-50\">\r\n                                                                        <h6>Marca Inicial:</h6>\r\n                                                                        <input\r\n                                                                            type=\"text\"\r\n                                                                            className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                            onChange={e => setMarcaIni(e.target.value)}\r\n                                                                             />\r\n                                                                    </div>\r\n                                                                     : null}\r\n\r\n                                                                     {(camionModal.length !== 0) ?\r\n                                                                        <div className=\"form-group w-50\">\r\n                                                                            <h6>Marca Final:</h6>\r\n                                                                            <input\r\n                                                                                type=\"text\"\r\n                                                                                className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                                onChange={e => setMarcaFin(e.target.value)}\r\n                                                                                 />\r\n                                                                        </div>\r\n                                                                         : null}\r\n\r\n                                                                         {(camionModal.length !== 0) ?\r\n                                                                            <div className=\"form-group w-50\">\r\n                                                                                <h6>Kilometraje:</h6>\r\n                                                                                <input\r\n                                                                                    type=\"text\"\r\n                                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                                    onChange={e => setKilometraje(e.target.value)}\r\n                                                                                     />\r\n                                                                            </div>\r\n                                                                             : null}\r\n\r\n                                                        </ModalBody>\r\n                                                        <ModalFooter>\r\n                                                            <Button color=\"primary\" onClick={handlerButtonIngresar}>Ingresar</Button>{' '}\r\n                                                            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                                                        </ModalFooter>\r\n                                                    </Modal>\r\n                                                    <Modal\r\n                                                        isOpen={modalCisterna}\r\n                                                        toggle1={toggle1}\r\n                                                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                                        centered>\r\n                                                        <ModalHeader toggle1={toggle1}>Recarga Cisterna</ModalHeader>\r\n                                                        <ModalBody>\r\n                                                            <div className=\"form-group w-50\">\r\n                                                                <h6>Código:</h6>\r\n                                                                <input\r\n                                                                    type=\"password\"\r\n                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                    onChange={e => setCodigo(e.target.value)}\r\n                                                                     />\r\n                                                            </div>\r\n                                                        </ModalBody>\r\n                                                        <ModalFooter>\r\n                                                            <Button color=\"primary\" onClick={handleLleno}>Ingresar</Button>{' '}\r\n                                                            <Button color=\"secondary\" onClick={toggle1}>Cancel</Button>\r\n                                                        </ModalFooter>\r\n                                                    </Modal>\r\n\r\n        {(gasolina.length === 0) ?\r\n            <div className=\"alert alert-dismissible alert-light mt-3\">\r\n            <h4 className=\"alert-heading text-center\">No hay Datos</h4>\r\n            <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n            </div>\r\n            :\r\n                <ul className=\"list-group mt-5\">\r\n                {gasolina.map(gaso => (\r\n                <SPLista \r\n                key={gaso.id}\r\n                gaso={gaso}\r\n                usuarioIniciado={usuarioIniciado}\r\n                inicioSesion={inicioSesion}\r\n                />\r\n            ))}\r\n            </ul>\r\n        } \r\n            \r\n            </form>\r\n            </div>\r\n        </Fragment >\r\n        )\r\n}\r\n\r\n\r\nexport default SuperGas","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\pages\\Error.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\MantenimientoLista.jsx",["248"],"import React,{useState} from 'react'\r\n\r\n\r\nfunction CamionLista({camion,inicioSesion,usuarioIniciado} ){\r\n\r\n\r\n//     var cadena = camion.placa;\r\n//     console.log(\"QUEEE\", cadena);\r\n//     var ultimo = cadena.charAt(cadena.length -1)\r\n//     console.log(\"ULTIMOO\", ultimo);\r\n\r\n//     const placa1y7 = 'Enero y Julio'\r\n//     const placa2y8 = 'Febrero y Agosto'\r\n//     const placa3y9 = 'Marzo y Setiembre'\r\n//     const placa4 = 'Abril y Octubre'\r\n//     const placa5y0 = 'Mayo y Noviembre'\r\n\r\n//     if(camion.length !== 0){\r\n//         setTrigger(true)\r\n//     }\r\n//     if(trigger){\r\n//     if(ultimo === '1' ){\r\n//     setRtv(placa1y7)\r\n//     setTrigger(false)\r\n//     }\r\n// }\r\n    // if(ultimo === 2 && ultimo === 8){\r\n    //     setRtv('Febrero y Agosto')\r\n    // }\r\n    // if(ultimo === 3 && ultimo === 9){\r\n    //     setRtv('Marzo y Setiembre')\r\n    // }\r\n    // if(ultimo === 4){\r\n    //     setRtv('Abril y Octubre')\r\n    // }\r\n    // if(ultimo === 5 && ultimo === 0){\r\n    //     setRtv('Mayo y Noviembre')\r\n    // }\r\n\r\n\r\n    return(\r\n\r\n        <li className=\"list-group-item d-flex justify-content-between align-item-center\" data-categoria={camion.unidad_negocio}>\r\n            <p>\r\n                <span className=\"font-weight-bold text-warning\">Camion: {camion.marca}{' '}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Placa: {camion.placa}</span><br></br>\r\n                 {/*<span className=\"font-weight-bold\">  Ruta: {camion.ruta}</span><br></br>*/}\r\n                <span className=\"font-weight-bold\">  Unidad de Negocio: {camion.unidad_negocio}</span><br></br>\r\n                <span className=\"font-weight-bold\">  RTV: {camion.rtv}</span><br></br>\r\n                <span className=\"font-weight-bold\">  TC: {camion.tc}</span><br></br>\r\n            </p>\r\n            \r\n        </li>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default CamionLista;\r\n\r\n//{`/choferes/editar/${camion.id}`}","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\CambioALista.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\ReparacionLista.jsx",["249"],"import axios from 'axios';\r\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport environment from '../env/environment'\r\nimport Swal from 'sweetalert2';\r\nimport TableMod from './Table'\r\n\r\nfunction ReparacionLista({ repara, inicioSesion, usuarioIniciado }) {\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [repuestos, setRepuestos] = useState('');\r\n    const [costo, setCosto] = useState('');\r\n    const [objeto, setObjeto] = useState('')\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [reparacion, setReparacion] = useState([])\r\n    const [fecha1, setFecha1] = useState('')\r\n\r\n    const apiProd = environment.url\r\n\r\n    const idReparacion = useRef('')\r\n\r\n    const props1 = []\r\n    const {\r\n        className\r\n    } = props1;\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const handleRepuestos = () => {\r\n        idReparacion.current = parseInt(reparacion[0].id)\r\n        console.log(\"IDDDD\", idReparacion.current);\r\n        const url = `${apiProd}reparacions/${idReparacion.current}`;\r\n\r\n        let date = new Date()\r\n\r\n        let day = date.getDate()\r\n        let month = date.getMonth() + 1\r\n        let year = date.getFullYear()\r\n\r\n        if (month < 10) {\r\n            console.log(`${year}-${month}-${day}`)\r\n            setFecha1(`${year}-0${month}-${day}`)\r\n        } else {\r\n            console.log(`${year}-${month}-${day}`)\r\n            setFecha1(`${year}-${month}-${day}`)\r\n        }\r\n\r\n        const objReporte = {\r\n            salida: Date.now(),\r\n            aprobado: 1,\r\n            repuestos: repuestos,\r\n            costo: costo\r\n        }\r\n\r\n        const EditarReparaciones = async () => {\r\n            const resultado = await axios.patch(url, objReporte)\r\n            if (resultado.status) {\r\n                Swal.fire(\r\n                    'Salida de Taller',\r\n                    'Se ha dado la Salida Correctamente',\r\n                    'success'\r\n                )\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'Vuelve a Intentarlo'\r\n                })\r\n            }\r\n        }\r\n        EditarReparaciones()\r\n        setModal(false)\r\n    }\r\n    useEffect(() => {\r\n        if (trigger) {\r\n            const queryRepara = async () => {\r\n                const response = await axios.get(`${apiProd}reparacions?filter[where][id]=${objeto}`)\r\n                setReparacion(response.data)\r\n                console.log(\"PRUEBAAAAA\", response.data);\r\n            }\r\n            setTrigger(false)\r\n            queryRepara()\r\n        }\r\n    }, [setTrigger, objeto, apiProd, trigger])\r\n\r\n    const handleDarSalida = objt => {\r\n        setModal(true)\r\n        setTrigger(true)\r\n        setObjeto(objt.target.value)\r\n\r\n    }\r\n\r\n    const reparacionHeaders = [\r\n        'Placa', 'Cedi', 'Entrada', 'Salida', 'Reporte', 'Aprobado', 'Repuestos', 'Costo'\r\n    ]\r\n\r\n    const reparacionBody = repara\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className=\"list-group-item d-flex justify-content-between align-item-center\" >\r\n                <p>\r\n\r\n                    <TableMod dataHeader={reparacionHeaders} dataBody={reparacionBody}>\r\n\r\n                    </TableMod>\r\n\r\n                </p>\r\n                <div>\r\n                    {(inicioSesion && (usuarioIniciado.rol === 'Admin')) ?\r\n                        <Button color=\"success\" value={repara.id} onClick={handleDarSalida}>Dar Salida</Button>\r\n                        : null}\r\n                </div>\r\n                <Modal\r\n                    isOpen={modal}\r\n                    toggle={toggle}\r\n                    className={className}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered>\r\n                    <ModalHeader toggle={toggle}>Dar salida a camion</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"form-group w-50\">\r\n                            <h6>Repuestos:</h6>\r\n                            <textarea\r\n                                type=\"number\"\r\n                                className=\"form-control mt-3  mr-3 mb-1\"\r\n                                onChange={e => setRepuestos(e.target.value)} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group w-50\">\r\n                            <h6>Costo ₡:</h6>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control mt-3  mr-3 mb-1\"\r\n                                onChange={e => setCosto(e.target.value)} />\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={handleRepuestos}>Ingresar</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReparacionLista;","C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\GasTomzaLista.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\SuperGasLista.jsx",[],"C:\\Users\\roger\\Documents\\Taller\\tallernuevi\\tallerTomza\\src\\components\\Table.jsx",["250","251","252"],"import React, { useState, useEffect } from 'react'\r\n\r\nfunction Table(props) {\r\n    console.log(props)\r\n    const [header, setHeader] = useState(props.dataHeader)\r\n    const [tableBody, setTableBody] = useState([]) \r\n    const [trigger, setTrigger] = useState(true)\r\n\r\n    useEffect (() => {\r\n        if (trigger) {\r\n            setTableBody([props.dataBody])\r\n            setTrigger(false)\r\n        }\r\n    })\r\n\r\n    const formatFecha = () => {\r\n        let formatted\r\n        let arrayFechas = []\r\n        \r\n        for (var i=0; i<tableBody.length; i++) {\r\n            \r\n            let date = new Date(tableBody[i].entrada)\r\n            formatted = date.toLocaleString('es-Es')\r\n            tableBody[i].entrada= formatted\r\n            console.log('...',date.toLocaleString('es-Es'),tableBody);\r\n        }\r\n        return formatted\r\n    }\r\n   \r\n    console.log('header', header, 'dataBody', tableBody)\r\n    return (\r\n        <section>\r\n            <div>\r\n                <table className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            {header.map(x =>\r\n                                <th>{x}</th>\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableBody.map(x => \r\n                            <tr>\r\n                                <td>\r\n                                    {x.id}\r\n                                </td>\r\n                                <td>\r\n                                    {x.cedi}\r\n                                </td>\r\n                                <td>\r\n                                    {formatFecha()}\r\n                                </td>\r\n                                <td>\r\n                                    {x.salida}\r\n                                </td>\r\n                                <td>\r\n                                    {x.reporte}\r\n                                </td>\r\n                                <td>\r\n                                    {x.aprobado}\r\n                                </td>\r\n                                <td>\r\n                                    {x.repuestos}\r\n                                </td>\r\n                                <td>\r\n                                    {x.costo}\r\n                                </td>\r\n                            </tr>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\nexport default Table",{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":45,"column":3,"nodeType":"259","endLine":45,"endColumn":15,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":42,"column":23,"nodeType":"263","messageId":"264","endLine":42,"endColumn":32},{"ruleId":"257","severity":1,"message":"265","line":40,"column":8,"nodeType":"259","endLine":40,"endColumn":26,"suggestions":"266"},{"ruleId":"261","severity":1,"message":"267","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":16},{"ruleId":"261","severity":1,"message":"268","line":3,"column":18,"nodeType":"263","messageId":"264","endLine":3,"endColumn":23},{"ruleId":"261","severity":1,"message":"269","line":3,"column":25,"nodeType":"263","messageId":"264","endLine":3,"endColumn":36},{"ruleId":"261","severity":1,"message":"270","line":3,"column":38,"nodeType":"263","messageId":"264","endLine":3,"endColumn":47},{"ruleId":"261","severity":1,"message":"271","line":3,"column":49,"nodeType":"263","messageId":"264","endLine":3,"endColumn":60},{"ruleId":"261","severity":1,"message":"272","line":17,"column":25,"nodeType":"263","messageId":"264","endLine":17,"endColumn":39},{"ruleId":"261","severity":1,"message":"273","line":18,"column":12,"nodeType":"263","messageId":"264","endLine":18,"endColumn":22},{"ruleId":"261","severity":1,"message":"274","line":18,"column":24,"nodeType":"263","messageId":"264","endLine":18,"endColumn":37},{"ruleId":"261","severity":1,"message":"275","line":20,"column":19,"nodeType":"263","messageId":"264","endLine":20,"endColumn":31},{"ruleId":"261","severity":1,"message":"276","line":21,"column":12,"nodeType":"263","messageId":"264","endLine":21,"endColumn":22},{"ruleId":"261","severity":1,"message":"277","line":21,"column":24,"nodeType":"263","messageId":"264","endLine":21,"endColumn":41},{"ruleId":"261","severity":1,"message":"278","line":28,"column":11,"nodeType":"263","messageId":"264","endLine":28,"endColumn":25},{"ruleId":"261","severity":1,"message":"279","line":32,"column":11,"nodeType":"263","messageId":"264","endLine":32,"endColumn":31},{"ruleId":"261","severity":1,"message":"280","line":38,"column":11,"nodeType":"263","messageId":"264","endLine":38,"endColumn":32},{"ruleId":"261","severity":1,"message":"281","line":142,"column":9,"nodeType":"263","messageId":"264","endLine":142,"endColumn":18},{"ruleId":"261","severity":1,"message":"282","line":145,"column":11,"nodeType":"263","messageId":"264","endLine":145,"endColumn":17},{"ruleId":"261","severity":1,"message":"283","line":31,"column":12,"nodeType":"263","messageId":"264","endLine":31,"endColumn":18},{"ruleId":"257","severity":1,"message":"284","line":57,"column":5,"nodeType":"263","endLine":57,"endColumn":14,"suggestions":"285"},{"ruleId":"257","severity":1,"message":"286","line":75,"column":5,"nodeType":"263","endLine":75,"endColumn":14,"suggestions":"287"},{"ruleId":"261","severity":1,"message":"288","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"289","line":53,"column":5,"nodeType":"263","endLine":53,"endColumn":14,"suggestions":"290"},{"ruleId":"261","severity":1,"message":"288","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"289","line":59,"column":5,"nodeType":"263","endLine":59,"endColumn":14,"suggestions":"291"},{"ruleId":"261","severity":1,"message":"292","line":1,"column":15,"nodeType":"263","messageId":"264","endLine":1,"endColumn":23},{"ruleId":"261","severity":1,"message":"283","line":17,"column":12,"nodeType":"263","messageId":"264","endLine":17,"endColumn":18},{"ruleId":"253","replacedBy":"293"},{"ruleId":"255","replacedBy":"294"},{"ruleId":"253","replacedBy":"295"},{"ruleId":"255","replacedBy":"296"},{"ruleId":"257","severity":1,"message":"258","line":45,"column":3,"nodeType":"259","endLine":45,"endColumn":15,"suggestions":"297"},{"ruleId":"261","severity":1,"message":"262","line":42,"column":23,"nodeType":"263","messageId":"264","endLine":42,"endColumn":32},{"ruleId":"257","severity":1,"message":"265","line":40,"column":8,"nodeType":"259","endLine":40,"endColumn":26,"suggestions":"298"},{"ruleId":"261","severity":1,"message":"267","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":16},{"ruleId":"261","severity":1,"message":"268","line":3,"column":18,"nodeType":"263","messageId":"264","endLine":3,"endColumn":23},{"ruleId":"261","severity":1,"message":"269","line":3,"column":25,"nodeType":"263","messageId":"264","endLine":3,"endColumn":36},{"ruleId":"261","severity":1,"message":"270","line":3,"column":38,"nodeType":"263","messageId":"264","endLine":3,"endColumn":47},{"ruleId":"261","severity":1,"message":"271","line":3,"column":49,"nodeType":"263","messageId":"264","endLine":3,"endColumn":60},{"ruleId":"261","severity":1,"message":"272","line":15,"column":25,"nodeType":"263","messageId":"264","endLine":15,"endColumn":39},{"ruleId":"261","severity":1,"message":"273","line":16,"column":12,"nodeType":"263","messageId":"264","endLine":16,"endColumn":22},{"ruleId":"261","severity":1,"message":"274","line":16,"column":24,"nodeType":"263","messageId":"264","endLine":16,"endColumn":37},{"ruleId":"261","severity":1,"message":"275","line":18,"column":19,"nodeType":"263","messageId":"264","endLine":18,"endColumn":31},{"ruleId":"261","severity":1,"message":"276","line":19,"column":12,"nodeType":"263","messageId":"264","endLine":19,"endColumn":22},{"ruleId":"261","severity":1,"message":"277","line":19,"column":24,"nodeType":"263","messageId":"264","endLine":19,"endColumn":41},{"ruleId":"261","severity":1,"message":"278","line":26,"column":11,"nodeType":"263","messageId":"264","endLine":26,"endColumn":25},{"ruleId":"261","severity":1,"message":"279","line":30,"column":11,"nodeType":"263","messageId":"264","endLine":30,"endColumn":31},{"ruleId":"261","severity":1,"message":"280","line":36,"column":11,"nodeType":"263","messageId":"264","endLine":36,"endColumn":32},{"ruleId":"261","severity":1,"message":"281","line":140,"column":9,"nodeType":"263","messageId":"264","endLine":140,"endColumn":18},{"ruleId":"261","severity":1,"message":"282","line":143,"column":11,"nodeType":"263","messageId":"264","endLine":143,"endColumn":17},{"ruleId":"261","severity":1,"message":"299","line":28,"column":12,"nodeType":"263","messageId":"264","endLine":28,"endColumn":17},{"ruleId":"261","severity":1,"message":"283","line":30,"column":12,"nodeType":"263","messageId":"264","endLine":30,"endColumn":18},{"ruleId":"257","severity":1,"message":"284","line":98,"column":5,"nodeType":"263","endLine":98,"endColumn":14,"suggestions":"300"},{"ruleId":"257","severity":1,"message":"286","line":116,"column":5,"nodeType":"263","endLine":116,"endColumn":14,"suggestions":"301"},{"ruleId":"261","severity":1,"message":"288","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"289","line":53,"column":5,"nodeType":"263","endLine":53,"endColumn":14,"suggestions":"302"},{"ruleId":"261","severity":1,"message":"288","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"289","line":59,"column":5,"nodeType":"263","endLine":59,"endColumn":14,"suggestions":"303"},{"ruleId":"261","severity":1,"message":"292","line":1,"column":15,"nodeType":"263","messageId":"264","endLine":1,"endColumn":23},{"ruleId":"261","severity":1,"message":"283","line":16,"column":12,"nodeType":"263","messageId":"264","endLine":16,"endColumn":18},{"ruleId":"261","severity":1,"message":"304","line":5,"column":20,"nodeType":"263","messageId":"264","endLine":5,"endColumn":29},{"ruleId":"257","severity":1,"message":"305","line":9,"column":5,"nodeType":"263","endLine":9,"endColumn":14,"suggestions":"306"},{"ruleId":"261","severity":1,"message":"307","line":18,"column":13,"nodeType":"263","messageId":"264","endLine":18,"endColumn":24},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiProd'. Either include it or remove the dependency array.","ArrayExpression",["310"],"no-unused-vars","'usuarioID' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'rtv'. Either include it or remove the dependency array.",["311"],"'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'setKilometraje' is assigned a value but never used.","'placaModal' is assigned a value but never used.","'setPlacaModal' is assigned a value but never used.","'guardarError' is assigned a value but never used.","'errorModal' is assigned a value but never used.","'guardarErrorModal' is assigned a value but never used.","'referenciaRuta' is assigned a value but never used.","'handlerButtonAgregar' is assigned a value but never used.","'handlerButtonIngresar' is assigned a value but never used.","'className' is assigned a value but never used.","'toggle' is assigned a value but never used.","'fecha1' is assigned a value but never used.","React Hook useEffect contains a call to 'setTrigger'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [trigger, apiProd] as a second argument to the useEffect Hook.",["312"],"React Hook useEffect contains a call to 'guardarError'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [triggerA, fecha, placa, apiProd] as a second argument to the useEffect Hook.",["313"],"'Link' is defined but never used.","React Hook useEffect contains a call to 'setTriggerGas'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [triggerGas, fecha, apiProd, gasolina.length] as a second argument to the useEffect Hook.",["314"],["315"],"'useState' is defined but never used.",["308"],["309"],["308"],["309"],["316"],["317"],"'error' is assigned a value but never used.",["318"],["319"],["320"],["321"],"'setHeader' is assigned a value but never used.","React Hook useEffect contains a call to 'setTableBody'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [trigger, props.dataBody] as a second argument to the useEffect Hook.",["322"],"'arrayFechas' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"331","fix":"333"},{"desc":"323","fix":"334"},{"desc":"325","fix":"335"},{"desc":"327","fix":"336"},{"desc":"329","fix":"337"},{"desc":"331","fix":"338"},{"desc":"331","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [apiProd, triggerApp]",{"range":"342","text":"343"},"Update the dependencies array to be: [trigger, apiProd, rtv]",{"range":"344","text":"345"},"Add dependencies array: [trigger, apiProd]",{"range":"346","text":"347"},"Add dependencies array: [triggerA, fecha, placa, apiProd]",{"range":"348","text":"349"},"Add dependencies array: [triggerGas, fecha, apiProd, gasolina.length]",{"range":"350","text":"351"},{"range":"352","text":"351"},{"range":"353","text":"343"},{"range":"354","text":"345"},{"range":"355","text":"347"},{"range":"356","text":"349"},{"range":"357","text":"351"},{"range":"358","text":"351"},"Add dependencies array: [trigger, props.dataBody]",{"range":"359","text":"360"},[1709,1721],"[apiProd, triggerApp]",[1190,1208],"[trigger, apiProd, rtv]",[2175,2175],", [trigger, apiProd]",[2849,2849],", [triggerA, fecha, placa, apiProd]",[2460,2460],", [triggerGas, fecha, apiProd, gasolina.length]",[2588,2588],[1709,1721],[1190,1208],[3842,3842],[4516,4516],[2449,2449],[2588,2588],[407,407],", [trigger, props.dataBody]"]
