[{"D:\\Desarrollo\\taller\\src\\index.jsx":"1","D:\\Desarrollo\\taller\\src\\App.jsx":"2","D:\\Desarrollo\\taller\\src\\Header.js":"3","D:\\Desarrollo\\taller\\src\\env\\environment.js":"4","D:\\Desarrollo\\taller\\src\\components\\CambioAceite.jsx":"5","D:\\Desarrollo\\taller\\src\\pages\\NotFoundPage.jsx":"6","D:\\Desarrollo\\taller\\src\\components\\CombuGas.jsx":"7","D:\\Desarrollo\\taller\\src\\components\\Camion.jsx":"8","D:\\Desarrollo\\taller\\src\\components\\Reparacion.jsx":"9","D:\\Desarrollo\\taller\\src\\pages\\MenuPage.jsx":"10","D:\\Desarrollo\\taller\\src\\components\\Rtv.jsx":"11","D:\\Desarrollo\\taller\\src\\pages\\Login.jsx":"12","D:\\Desarrollo\\taller\\src\\components\\Mantenimiento.jsx":"13","D:\\Desarrollo\\taller\\src\\components\\Minae.jsx":"14","D:\\Desarrollo\\taller\\src\\components\\Combustible.jsx":"15","D:\\Desarrollo\\taller\\src\\components\\CombuSuper.jsx":"16","D:\\Desarrollo\\taller\\src\\components\\PesosDimensiones.jsx":"17","D:\\Desarrollo\\taller\\src\\components\\TableAceite.jsx":"18","D:\\Desarrollo\\taller\\src\\components\\CambioALista.jsx":"19","D:\\Desarrollo\\taller\\src\\pages\\Error.jsx":"20","D:\\Desarrollo\\taller\\src\\components\\ReparacionLista.jsx":"21","D:\\Desarrollo\\taller\\src\\components\\GasTomzaLista.jsx":"22","D:\\Desarrollo\\taller\\src\\components\\SuperGasLista.jsx":"23","D:\\Desarrollo\\taller\\src\\components\\MantenimientoLista.jsx":"24","D:\\Desarrollo\\taller\\src\\components\\Table.jsx":"25","D:\\Desarrollo\\taller\\src\\components\\TableCambio.jsx":"26"},{"size":150,"mtime":1611710724379,"results":"27","hashOfConfig":"28"},{"size":4139,"mtime":1627581785952,"results":"29","hashOfConfig":"28"},{"size":423,"mtime":1622362055303,"results":"30","hashOfConfig":"28"},{"size":218,"mtime":1627581785955,"results":"31","hashOfConfig":"28"},{"size":6682,"mtime":1628271560829,"results":"32","hashOfConfig":"28"},{"size":306,"mtime":1620340986643,"results":"33","hashOfConfig":"28"},{"size":18258,"mtime":1627408867164,"results":"34","hashOfConfig":"28"},{"size":5110,"mtime":1627408867155,"results":"35","hashOfConfig":"28"},{"size":11228,"mtime":1628267141064,"results":"36","hashOfConfig":"28"},{"size":2221,"mtime":1626803861389,"results":"37","hashOfConfig":"28"},{"size":3060,"mtime":1627581785955,"results":"38","hashOfConfig":"28"},{"size":3632,"mtime":1627581785955,"results":"39","hashOfConfig":"28"},{"size":1874,"mtime":1627742022732,"results":"40","hashOfConfig":"28"},{"size":0,"mtime":1627581785953,"results":"41","hashOfConfig":"28"},{"size":2432,"mtime":1624647354992,"results":"42","hashOfConfig":"28"},{"size":20888,"mtime":1627408867164,"results":"43","hashOfConfig":"28"},{"size":0,"mtime":1627581785954,"results":"44","hashOfConfig":"28"},{"size":2333,"mtime":1628191156158,"results":"45","hashOfConfig":"28"},{"size":5359,"mtime":1627580388794,"results":"46","hashOfConfig":"28"},{"size":203,"mtime":1622730738919,"results":"47","hashOfConfig":"28"},{"size":7811,"mtime":1628268622044,"results":"48","hashOfConfig":"28"},{"size":727,"mtime":1625001955116,"results":"49","hashOfConfig":"28"},{"size":727,"mtime":1625500799813,"results":"50","hashOfConfig":"28"},{"size":1913,"mtime":1627742095300,"results":"51","hashOfConfig":"28"},{"size":2754,"mtime":1628262113516,"results":"52","hashOfConfig":"28"},{"size":1502,"mtime":1628005439650,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"3o0hn5",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},"D:\\Desarrollo\\taller\\src\\index.jsx",[],["116","117"],"D:\\Desarrollo\\taller\\src\\App.jsx",["118","119"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport environment from './env/environment'\r\n// import \"./App.css\";\r\nimport 'bootswatch/dist/united/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from './Header'\r\nimport MenuPage from './pages/MenuPage'\r\nimport Reparacion from './components/Reparacion'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\nimport LoginUser from './pages/Login'\r\nimport CambioAceite from './components/CambioAceite'\r\nimport Mantenimiento from './components/Mantenimiento'\r\nimport RTV from './components/Rtv'\r\nimport PesosDimensiones from './components/PesosDimensiones'\r\nimport Minae from './components/Minae'\r\nimport AgregarCamion from './components/Camion'\r\nimport Combustible from './components/Combustible'\r\nimport GasTomza from './components/CombuGas'\r\nimport SuperGas from './components/CombuSuper'\r\nimport Style from './App.css'\r\n\r\n// Función Flecha o Arrow Function\r\nconst App = () => {\r\n  const [inicioSesion, guardarInicioSesion] = useState(false)\r\n  const [usuarioIniciado, guardarUsuarioIniciado] = useState({})\r\n\r\n  //Combustible\r\n  const [gas, setGas] = useState([])\r\n  const [superG, setSuper] = useState([])\r\n  const [triggerApp, setTriggerApp] = useState(true)\r\n\r\n  const apiProd = environment.url\r\n\r\n  useEffect(() => {\r\n    if (triggerApp) {\r\n      const queryCediGas = async () => {\r\n        const response = await axios.get(`${apiProd}bod_combustibles?filter[where][cedi]=Gas Tomza`)\r\n        setGas(response.data)\r\n      }\r\n      queryCediGas();\r\n      const queryCediSuper = async () => {\r\n        const response = await axios.get(`${apiProd}bod_combustibles?filter[where][cedi]=Super Gas`)\r\n        setSuper(response.data)\r\n      }\r\n      queryCediSuper();\r\n      setTriggerApp(false)\r\n    }\r\n  }, [triggerApp])\r\n\r\n  console.log(\"BODEGA\", gas, superG);\r\n\r\n  // Lo que ejecuta la función\r\n  console.log(\"Renderización de App\");\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header />\r\n\r\n        <Switch>\r\n          {(inicioSesion) ? <Route exact path=\"/Taller\" render={() => (<MenuPage usuarioIniciado={usuarioIniciado} setTriggerApp={setTriggerApp} />)} />\r\n            :\r\n            <Route exact path=\"/Taller/\" component={() => (<LoginUser guardarInicioSesion={guardarInicioSesion} guardarUsuarioIniciado={guardarUsuarioIniciado} />)} />}\r\n\r\n          <Route exact path=\"/Taller/camion\" render={() => (<AgregarCamion usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} />)} />\r\n\r\n          <Route exact path=\"/Taller/repa\" render={() => (<Reparacion usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} />)} />\r\n\r\n          <Route exact path=\"/Taller/cambio\" render={() => (<CambioAceite usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} />)} />\r\n\r\n          <Route exact path=\"/Taller/mante\" render={() => (<Mantenimiento usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} />)} />\r\n\r\n          <Route exact path=\"/Taller/mante/rtv\" render={() => (<RTV usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} />)} />\r\n\r\n          <Route exact path=\"/Taller/mante/pesosdimensiones\" render={() => (<PesosDimensiones usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} />)} />\r\n\r\n          <Route exact path=\"/Taller/mante/minae\" render={() => (<Minae usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} />)} />\r\n\r\n          <Route exact path=\"/Taller/gas\" render={() => (<Combustible usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} superG={superG} gas={gas} />)} />\r\n\r\n          <Route exact path=\"/Taller/gas/gastomza\" render={() => (<GasTomza usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} gas={gas} setTriggerApp={setTriggerApp} />)} />\r\n\r\n          <Route exact path=\"/Taller/supergas\" render={() => (<SuperGas usuarioIniciado={usuarioIniciado} inicioSesion={inicioSesion} superG={superG} setTriggerApp={setTriggerApp} />)} />\r\n\r\n          <Route>\r\n            <NotFoundPage />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\Desarrollo\\taller\\src\\Header.js",[],"D:\\Desarrollo\\taller\\src\\env\\environment.js",[],"D:\\Desarrollo\\taller\\src\\components\\CambioAceite.jsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"D:\\Desarrollo\\taller\\src\\pages\\NotFoundPage.jsx",[],"D:\\Desarrollo\\taller\\src\\components\\CombuGas.jsx",["139","140"],"import React, { Fragment, useState, useRef, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport environment from '../env/environment'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Error from '../pages/Error'\r\nimport Swal from 'sweetalert2';\r\nimport GTLista from './GasTomzaLista';\r\n\r\nconst GasTomza = ({ usuarioIniciado, gas, setTriggerApp, inicioSesion }) => {\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [error, guardarError] = useState(false)\r\n    const [triggerBod, setTriggerBod] = useState(false)\r\n    const [triggerCam, setTriggerCam] = useState(false)\r\n    const [triggerGas, setTriggerGas] = useState(false)\r\n    const [fecha, guardarFecha] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [modalCisterna, setModalCisterna] = useState(false);\r\n    const [errorModal, guardarErrorModal] = useState(false)\r\n    const [placaModal, setPlacaModal] = useState('')\r\n    const [camionModal, setCamionModal] = useState([])\r\n    const [marcaIni, setMarcaIni] = useState(\"\");\r\n    const [marcaFin, setMarcaFin] = useState(\"\")\r\n    const [kilometraje, setKilometraje] = useState('')\r\n    const [gasolina, setGasolina] = useState([])\r\n    const [tipo, setTipo] = useState('')\r\n    const [codigo, setCodigo] = useState(0)\r\n\r\n\r\n    const apiProd = environment.url\r\n\r\n    const rutaRef = useRef('')\r\n    const referenciaRuta = rutaRef.current.value;\r\n\r\n    const bodegaRef = useRef('')\r\n    bodegaRef.current = parseInt(gas[0].id)\r\n\r\n    const idCamion = useRef('')\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTriggerGas(true)\r\n\r\n        if (fecha === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (triggerGas) {\r\n            console.log('TRIGGER', triggerGas);\r\n            console.log('FECHAAA', fecha);\r\n            const queryGas = async () => {\r\n                const response = await axios.get(`${apiProd}descarga_gasols?filter[where][fecha]=${fecha}&filter[where][cedi]=Gas Tomza`)\r\n                setGasolina(response.data)\r\n                console.log(\"PUTAsal\", response.data\r\n\r\n                );\r\n                console.log(\"Largo\", gasolina.length);\r\n            }\r\n            queryGas()\r\n        }\r\n        setTriggerGas(false)\r\n\r\n    })\r\n\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const toggle1 = () => setModalCisterna(!modalCisterna);\r\n\r\n    const handleCisterna = () => {\r\n        setModalCisterna(true)\r\n        setTriggerApp(true)\r\n    }\r\n\r\n    const handleLleno = () => {\r\n        const codi = 202107\r\n\r\n        const objLleno = {\r\n            cap_actual: ((gas[0].cap_actual) + (7580))\r\n        }\r\n        const codig = parseInt(codigo)\r\n\r\n\r\n        if (codig === codi) {\r\n            console.log(\"IGUaL\");\r\n            const RellenoCisterna = async () => {\r\n                const result = await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objLleno)\r\n                if (result.status === 200) {\r\n                    setTriggerApp(true)\r\n                    Swal.fire(\r\n                        `Se recargado la Cisterna`,\r\n                        'Se ha ingresado correctamente',\r\n                        'success'\r\n                    )\r\n                    setModalCisterna(false)\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: 'Vuelve a Intentarlo'\r\n                    })\r\n                }\r\n            }\r\n            RellenoCisterna()\r\n\r\n        }\r\n        setTriggerApp(true)\r\n\r\n\r\n        console.log(\"OBJETO\", objLleno);\r\n    }\r\n\r\n    const handlerButtonAgregar = () => {\r\n        setModal(!modal)\r\n        setCamionModal([])\r\n        setMarcaIni(\"\")\r\n        setMarcaFin(\"\")\r\n        setKilometraje(\"\")\r\n        guardarErrorModal(false);\r\n        setTrigger(true)\r\n        setTriggerBod(true)\r\n        setTriggerCam(true)\r\n    }\r\n\r\n    console.log(\"NIGGA\", (gas[0].cap_actual - (marcaFin - marcaIni)));\r\n    const handlerButtonIngresar = () => {\r\n\r\n\r\n\r\n        if (placaModal === \"\" || marcaIni === \"\" || marcaFin === \"\" || kilometraje === \"\" || tipo === \"\") {\r\n            guardarErrorModal(true)\r\n            console.log(guardarErrorModal)\r\n            setModal(true);\r\n            return;\r\n        }\r\n        guardarErrorModal(false);\r\n        setModal(false);\r\n        const llenado = marcaFin - marcaIni\r\n        const rebajoBodega = (gas[0].cap_actual - llenado)\r\n\r\n        if ((gas[0].cap_actual) - (rebajoBodega) >= 3000) {\r\n\r\n            const objGasolina = {\r\n                placa_camion: camionModal[0].placa,\r\n                fecha: Date.now(),\r\n                ruta: camionModal[0].ruta,\r\n                descarga: llenado,\r\n                cedi: usuarioIniciado.cedi,\r\n                tipo: tipo\r\n            }\r\n            console.log(\"GASOLINA\", objGasolina);\r\n\r\n\r\n            console.log(\"BODEGA\", rebajoBodega);\r\n\r\n            const objBodega = {\r\n                cap_actual: (rebajoBodega)\r\n            }\r\n            console.log(\"ACtual\", gas[0].cap_actual);\r\n            console.log(\"rebajado\", objBodega);\r\n\r\n            if (trigger) {\r\n                setTriggerApp(true)\r\n                const AgregarCargaGas = async () => {\r\n                    const result = await axios.post(`${apiProd}descarga_gasols`, objGasolina)\r\n                    if (result.status === 200) {\r\n                        console.log(\"DESCARGA\");\r\n                    }\r\n                    setTrigger(false)\r\n                }\r\n                AgregarCargaGas();\r\n            }\r\n            setTriggerApp(false)\r\n\r\n            if (triggerBod) {\r\n                console.log(\"BODEGA BAJA\");\r\n                const EditarBodega = async () => {\r\n                    const result = await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objBodega)\r\n                    if (result.status === 200) {\r\n                        Swal.fire(\r\n                            `Se han agredado ${llenado}Lts al camión placa ${camionModal[0].placa}`,\r\n                            'Se ha ingresado correctamente',\r\n                            'success'\r\n                        )\r\n                        const bita = await axios.post(`${apiProd}bitacoraTallers`, {\r\n                            idUsuario: usuarioIniciado.id,\r\n                            accion: `Ha ingresado una descarga de combustible el usuario: ${usuarioIniciado.name}`,\r\n                            fecha: Date.now()\r\n                        });\r\n                        if (bita.status === 200) {\r\n                            console.log('se ha agregado a la bitacora');\r\n                        }\r\n                    }\r\n                    setTriggerBod(false)\r\n                    setTriggerApp(true)\r\n                }\r\n                EditarBodega()\r\n\r\n                idCamion.current = parseFloat(camionModal[0].id)\r\n                console.log(\"PREMIOO\", idCamion.current);\r\n            }\r\n\r\n            if (triggerCam) {\r\n\r\n                console.log(\"CAAAAMION\", camionModal);\r\n\r\n                idCamion.current = parseInt(camionModal[0].id)\r\n                console.log(\"ID CAMION\", idCamion.current)\r\n\r\n                console.log('Kilometraje Inicial', camionModal[0].kmInicial);\r\n\r\n                const limite = (parseInt(camionModal[0].kmInicial) + 11000)\r\n                console.log('LIMITE', limite);\r\n\r\n                const sumado = (parseInt(camionModal[0].kmTotal) + parseInt(kilometraje))\r\n                console.log('SUMADO', sumado);\r\n\r\n                if (sumado < limite) {\r\n\r\n                    const objCamion = {\r\n                        kmTotal: sumado,\r\n                        cambio: 0\r\n                    }\r\n                    console.log('No ocupa cambio');\r\n                    const EditarCamion = async () => {\r\n                        const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                        if (resultado.status === 200) {\r\n                            console.log('MENORR');\r\n                        }\r\n                    }\r\n                    EditarCamion()\r\n                } else {\r\n                    const objCamion = {\r\n                        kmInicial: sumado,\r\n                        kmTotal: sumado,\r\n                        cambio: 1\r\n                    }\r\n                    console.log('Ocupa cambio')\r\n                    const EditarCamion = async () => {\r\n                        const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                        if (resultado.status === 200) {\r\n                            console.log(\"MAYORR\");\r\n                        }\r\n                    }\r\n                    EditarCamion()\r\n\r\n                }\r\n            }\r\n\r\n        } else {\r\n            console.log(\"BODEGA ALTA\");\r\n            Swal.fire(\r\n                `El tanque principal está en el mínimo`,\r\n                'Solicite llenado de tanque',\r\n                'error'\r\n            )\r\n            setModal(true)\r\n        }\r\n    }\r\n\r\n    const handlePlaca = () => {\r\n\r\n        if (placaModal !== '') {\r\n            console.log(\"PASAAASS\");\r\n            const queryCamion = async () => {\r\n                const response = await axios.get(`${apiProd}camions/?filter[where][placa]=${placaModal}`)\r\n                if (response.data.length === 0) {\r\n                    Swal.fire(\r\n                        `Placa ${placaModal}, no encontrada`,\r\n                        'Intenta nuevamente',\r\n                        'error',\r\n                    )\r\n                    setCamionModal([])\r\n                }\r\n                setCamionModal(response.data)\r\n            }\r\n            queryCamion()\r\n        } else {\r\n            Swal.fire(\r\n                'Espacio Necesario',\r\n                'Intente nuevamente',\r\n                'error',\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div class=\"col-md-8 mx-auto\">\r\n                <h1 className=\"mt-4 text-center\">Combustible Gas Tomza</h1>\r\n                {(error) ? <Error mensaje='Campo fecha son obligatorios' /> : null}\r\n                <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                    <label className=\"ml-3\">Fecha:</label>\r\n                    <div className=\"form-row\">\r\n\r\n                        <div className=\"form-group w-25 ml-3\">\r\n                            <input type=\"date\" className=\"form-control\" name=\"fecha_reparacion\" onChange={e => guardarFecha(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Gasto\" />\r\n\r\n                    <Button color=\"info\" className=\"mt-2\" onClick={handlerButtonAgregar}>Agregar Gasto</Button>\r\n\r\n                    <Button color=\"success\" className=\"mt-2 ml-3\" onClick={handleCisterna}>Cisternas Combustibles</Button>\r\n\r\n                    <Modal\r\n                        isOpen={modal}\r\n                        toggle={toggle}\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                        centered>\r\n                        <ModalHeader toggle={toggle}>Combustible</ModalHeader>\r\n                        <ModalBody>\r\n                            {(errorModal) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n                            <div className=\"form-group w-50\">\r\n                                <h6>Placa:</h6>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                    onChange={e => setPlacaModal(e.target.value)}\r\n                                />\r\n                                <Button className=\"btn btn-success mt-2\" onClick={handlePlaca}>Cargar Camion</Button>\r\n                            </div>\r\n\r\n                            {(camionModal.length !== 0) ?\r\n                                <div className=\"form-group w-50\">\r\n                                    <h6>Ruta:</h6>\r\n                                    <input\r\n                                        id=\"disabledInput\"\r\n                                        type=\"text\"\r\n                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                        disabled=\"true\"\r\n                                        ref={referenciaRuta}\r\n                                        defaultValue={camionModal[0].ruta}\r\n                                    />\r\n                                </div>\r\n                                : null}\r\n\r\n                            {(camionModal.length !== 0) ?\r\n                                <div className=\"form-group w-50\">\r\n                                    <label>Tipo:</label>\r\n                                    <select className=\"custom-select\" onChange={e => setTipo(e.target.value)}>\r\n                                        <option value=\"\">Tipo</option>\r\n                                        <option value=\"Recope\">Viajes a Recope</option>\r\n                                        <option value=\"Aquilados\">Viaje de Alquilados</option>\r\n                                        <option value=\"Metalco\">Metalco</option>\r\n                                        <option value=\"La Cruz\">La Cruz</option>\r\n                                        <option value=\"Carreta Guapiles\">Carreta Guápiles</option>\r\n                                        <option value=\"Tanden\">Tanden</option>\r\n                                        <option value=\"Carreta Sur\">Carreta Zona Sur</option>\r\n                                        <option value=\"Traslados\">Traslados</option>\r\n                                    </select>\r\n                                </div>\r\n                                : null}\r\n\r\n                            {(camionModal.length !== 0) ?\r\n                                <div className=\"form-group w-50\">\r\n                                    <h6>Marca Inicial:</h6>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                        onChange={e => setMarcaIni(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                : null}\r\n\r\n                            {(camionModal.length !== 0) ?\r\n                                <div className=\"form-group w-50\">\r\n                                    <h6>Marca Final:</h6>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                        onChange={e => setMarcaFin(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                : null}\r\n\r\n                            {(camionModal.length !== 0) ?\r\n                                <div className=\"form-group w-50\">\r\n                                    <h6>Kilometraje:</h6>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                        onChange={e => setKilometraje(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                : null}\r\n\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={handlerButtonIngresar}>Ingresar</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <Modal\r\n                        isOpen={modalCisterna}\r\n                        toggle1={toggle1}\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                        centered>\r\n                        <ModalHeader toggle1={toggle1}>Recarga Cisterna</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"form-group w-50\">\r\n                                <h6>Código:</h6>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                    onChange={e => setCodigo(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={handleLleno}>Ingresar</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={toggle1}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    {(gasolina.length === 0) ?\r\n                        <div className=\"alert alert-dismissible alert-light mt-3\">\r\n                            <h4 className=\"alert-heading text-center\">No hay Datos</h4>\r\n                            <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n                        </div>\r\n                        :\r\n                        <ul className=\"list-group mt-5\">\r\n                            {gasolina.map(gaso => (\r\n                                <GTLista\r\n                                    key={gaso.id}\r\n                                    gaso={gaso}\r\n                                    usuarioIniciado={usuarioIniciado}\r\n                                    inicioSesion={inicioSesion}\r\n                                />\r\n                            ))}\r\n                        </ul>\r\n                    }\r\n\r\n                </form>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\n\r\nexport default GasTomza","D:\\Desarrollo\\taller\\src\\components\\Camion.jsx",[],"D:\\Desarrollo\\taller\\src\\components\\Reparacion.jsx",["141","142","143","144","145"],"D:\\Desarrollo\\taller\\src\\pages\\MenuPage.jsx",[],"D:\\Desarrollo\\taller\\src\\components\\Rtv.jsx",["146"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport environment from '../env/environment'\r\nimport Error from '../pages/Error'\r\n\r\nfunction RTV({ inicioSesion, usuarioIniciado }) {\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [camiones, guardarCamiones] = useState([])\r\n    const [error, guardarError] = useState(false)\r\n    const [rtv, setRtv] = useState('')\r\n\r\n\r\n    const apiProd = environment.url\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTrigger(true);\r\n        if (rtv === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (trigger) {\r\n            console.log(\"PASA\")\r\n            const consultaCamion = async () => {\r\n                const response = await axios.get(`${apiProd}camions?filter[where][rtv]=${rtv}`);\r\n                guardarCamiones(response.data)\r\n                console.log(\"CAMIONES\", response.data)\r\n            }\r\n            consultaCamion()\r\n            setTrigger(false)\r\n        }\r\n    }, [trigger, apiProd])\r\n    console.log(\"CAMIONES\", camiones)\r\n\r\n    return (\r\n        <div className=\"col-md-8 mt-4 text-center mx-auto\">\r\n            <h1>Revisión Técnica Vehicular</h1>\r\n\r\n            {(error) ? <Error mensaje='Campo placa es obligatorio' /> : null}\r\n            <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                <label className=\"ml-3\">Rtv:</label>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group w-10 ml-3\">\r\n                        <select className=\"custom-select\" onChange={e => setRtv(e.target.value)}>\r\n                            <option disabled selected=\"\">Consultar...</option>\r\n                            <option value=\"Enero y Julio\">Enero y Julio</option>\r\n                            <option value=\"Febrero y Agosto\">Febrero y Agosto</option>\r\n                            <option value=\"Marzo y Setiembre\">Marzo y Setiembre</option>\r\n                            <option value=\"Mayo y Noviembre\">Mayo y Noviembre</option>\r\n                            <option value=\"Abril y Octubre\">Abril y Octubre</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Mantenimieto\" />\r\n            </form>\r\n\r\n            {(camiones.length === 0) ?\r\n                <div className=\"alert alert-dismissible alert-light mt-3\">\r\n                    <h4 className=\"alert-heading text-center\" >No Hay Datos</h4>\r\n                    <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <ul className=\"list-group mt-3\">\r\n\r\n                    </ul>\r\n                    <ul className=\"list-group mt-3\">\r\n\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default RTV","D:\\Desarrollo\\taller\\src\\pages\\Login.jsx",["147"],"import React, { useState } from 'react';\r\nimport environment from \"../env/environment\"\r\nimport Swal from 'sweetalert2';\r\nimport Error from './Error'\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nconst LoginUser = ({ guardarInicioSesion, guardarUsuarioIniciado }) => {\r\n\r\n    // const history = useHistory;\r\n    // const handleClick = () => history.push('/Cliente/MainMenu');\r\n\r\n    const [error, guardarError] = useState(false)\r\n    const [usuario, guardarUsuario] = useState('')//usuario===correo\r\n    const [contrasena, guardarContrasena] = useState('')\r\n\r\n    const apiProd = environment.url\r\n\r\n\r\n\r\n    const startLogin = async e => {\r\n        e.preventDefault();\r\n        if (usuario === '' || contrasena === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n\r\n        try {\r\n            console.log('pasa por aqui');\r\n            const resultLogin = await axios.get(`${apiProd}usertallers/findOne?filter[where][user]=${usuario}&&[pass]=${contrasena}`);\r\n            console.log(\"Consulta\")\r\n            if (resultLogin.status === 200) {\r\n                Swal.fire(\r\n                    'Credenciales Correctas',\r\n                    'Se ha iniciado sesion correctamente correctamente',\r\n                    'success'\r\n                )\r\n                const usuarioID = (resultLogin.data.id)\r\n                // const bita = await axios.post(`${apiProd}bitacoraTallers`, {\r\n                //     idUsuario: usuarioID,\r\n                //     accion: `Ha ingresado al sistema el usuario: ${usuario}`,\r\n                //     fecha: Date.now()\r\n                // });\r\n                // if(bita.status === 200){\r\n                //     console.log('se ha agregado a la bitacora');\r\n                // }\r\n                guardarInicioSesion(true);\r\n                guardarUsuarioIniciado(resultLogin.data)\r\n                console.log(\"USUARIOOO\", (resultLogin.data.id));\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Credenciales Incorrectas',\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"col-md-8 mx-auto \">\r\n            <h2 className=\"text-center pt-4\">Iniciar Sesión</h2>\r\n            {(error) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n            <form\r\n                className=\"mt-5\"\r\n                onSubmit={startLogin}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Correo del Usuario:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"usuario\"\r\n                        placeholder=\"Ej: lsolano@tomza.com\"\r\n                        onChange={e => guardarUsuario(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Contraseña:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"contrasena\"\r\n                        placeholder=\"Contraseña del usuario\"\r\n                        onChange={e => guardarContrasena(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"font-weight-bold mt-5 btn btn-primary btn-block py-3\" value=\"Iniciar Sesión\" />\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginUser;\r\n","D:\\Desarrollo\\taller\\src\\components\\Mantenimiento.jsx",["148","149","150","151","152","153"],"import axios from 'axios';\r\nimport React, { useState, Fragment, useEffect } from 'react'\r\nimport environment from '../env/environment'\r\nimport { Link } from \"react-router-dom\";\r\nimport CamionLista from './MantenimientoLista'\r\nimport Error from '../pages/Error'\r\nimport { GoTools } from \"react-icons/go\";\r\nimport { GiWeight } from \"react-icons/gi\";\r\nimport { FaLeaf } from \"react-icons/fa\";\r\n\r\nfunction Mantenimiento() {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div class=\"col-md-8 mx-auto\">\r\n                <h1 className=\"mt-4 text-center\">Mantenimiento</h1>\r\n                <div className='d-flex justify-content-center mt-4'>\r\n                    <Link to=\"/Taller/mante/rtv\">\r\n                        <div className='border mt-4 mr-4 text-primary text-center hover-shadow'>\r\n                            <GoTools size=\"8em\" className='m-4' /><br />\r\n                            <hr></hr>\r\n                            <h6>RTV</h6>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/Taller/mante/pesosdimensiones\">\r\n                        <div className='border mt-4 mr-4 text-secondary text-center hover-shadow'>\r\n                            <GiWeight size=\"8em\" className='m-4' /><br />\r\n                            <hr></hr>\r\n                            <h6>Pesos y Dimensiones</h6>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/Taller/mante/minae\">\r\n                        <div className='border mt-4 text-success text-center hover-shadow'>\r\n                            <FaLeaf size=\"8em\" className='m-4' /><br />\r\n                            <hr></hr>\r\n                            <h6>MINAE</h6>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Mantenimiento\r\n","D:\\Desarrollo\\taller\\src\\components\\Minae.jsx",[],"D:\\Desarrollo\\taller\\src\\components\\Combustible.jsx",[],"D:\\Desarrollo\\taller\\src\\components\\CombuSuper.jsx",["154","155"],"import React, { Fragment, useState, useRef, useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport environment from '../env/environment'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Error from '../pages/Error'\r\nimport Swal from 'sweetalert2';\r\nimport SPLista from './SuperGasLista';\r\n\r\nconst SuperGas = ({usuarioIniciado, superG, setTriggerApp,inicioSesion}) => {\r\n\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [error, guardarError] = useState(false)\r\n    const [triggerBod, setTriggerBod] = useState(false)\r\n    const [triggerCam, setTriggerCam] = useState(false)\r\n    const [triggerGas, setTriggerGas] = useState(false)\r\n    const [fecha, setFecha] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [modalCisterna, setModalCisterna] = useState(false);\r\n    const [errorModal, guardarErrorModal] = useState(false)\r\n    const [placaModal, setPlacaModal] = useState('')\r\n    const [camionModal, setCamionModal] = useState([])\r\n    const [marcaIni, setMarcaIni] = useState(\"\");\r\n    const [marcaFin, setMarcaFin] = useState(\"\")\r\n    const [kilometraje, setKilometraje] = useState('')\r\n    const [gasolina, setGasolina] = useState([])\r\n    const [tipo, setTipo] = useState('') \r\n    const [codigo, setCodigo] = useState(0)\r\n\r\n\r\n    const apiProd = environment.url\r\n\r\n    const rutaRef = useRef('')\r\n    const referenciaRuta = rutaRef.current.value;\r\n\r\n    const bodegaRef = useRef('')\r\n    bodegaRef.current = parseInt(superG[0].id)\r\n\r\n\r\n    const idCamion = useRef('')\r\n\r\n    const recarga = e => {\r\n        e.preventDefault();\r\n        setTriggerGas(true)\r\n\r\n        if (fecha === '') {\r\n            guardarError(true)\r\n            console.log(guardarError)\r\n            return;\r\n        }\r\n        guardarError(false)\r\n    }\r\n\r\n    // const handleConsulta = () => {\r\n    //     setTriggerGas(true)\r\n    // }\r\n\r\n    console.log('TRIGGER', triggerGas);\r\n    useEffect(() => {\r\n        if(triggerGas){\r\n            console.log('TRIGGER', triggerGas);\r\n            console.log('FECHAAA', fecha);\r\n            const queryGas = async () => {\r\n                const response = await axios.get(`${apiProd}descarga_gasols?filter[where][fecha]=${fecha}&filter[where][cedi]=Super Gas`)\r\n                setGasolina(response.data)\r\n                console.log(\"PUTAsal\", response.data\r\n                \r\n                );\r\n                console.log(\"Largo\", gasolina.length);\r\n            }\r\n            queryGas()\r\n        }\r\n        setTriggerGas(false)\r\n\r\n    })\r\n\r\n    console.log(\"GASOLINA\", gasolina);\r\n\r\n\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const toggle1 = () => setModalCisterna(!modalCisterna);\r\n\r\n    const handleCisterna = () => {\r\n        setModalCisterna(true)\r\n        setTriggerApp(true)\r\n    }\r\n\r\n    const handleLleno = () => {\r\n        const codi = 202107\r\n\r\n        console.log(\"Bodega\", superG[0].cap_actual);\r\n\r\n        const objLleno = {\r\n            cap_actual: ((superG[0].cap_actual) + (3790))\r\n        }\r\n\r\n        const codig = parseInt(codigo)\r\n\r\n        if(codig === codi){\r\n            console.log(\"IGUaL\");\r\n            const RellenoCisterna = async () => {\r\n                const result = await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objLleno)\r\n                if(result.status === 200){\r\n                    Swal.fire(\r\n                        `Se ha recargado la Cisterna`,\r\n                        'Se ha ingresado correctamente',\r\n                        'success'\r\n                    )\r\n                    setModalCisterna(false)\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: 'Vuelve a Intentarlo'\r\n                    })\r\n                }\r\n            }\r\n            RellenoCisterna()\r\n            setTriggerApp(true)\r\n\r\n        }\r\n\r\n        console.log(\"OBJETO\", objLleno);\r\n    }\r\n\r\n    const handlerButtonAgregar = () => {\r\n        setModal(!modal)\r\n        setCamionModal([])\r\n        setMarcaIni(\"\")\r\n        setMarcaFin(\"\")\r\n        setKilometraje(\"\")\r\n        guardarErrorModal(false);\r\n        setTrigger(true)\r\n        setTriggerBod(true)\r\n        setTriggerCam(true)\r\n    }\r\n\r\n    const handlerButtonIngresar = () => {\r\n              \r\n        if (placaModal === \"\" || marcaIni === \"\" || marcaFin === \"\" || kilometraje === \"\" || tipo === \"\") {\r\n            guardarErrorModal(true)\r\n            console.log(guardarErrorModal)\r\n            setModal(true);\r\n            return;\r\n        }\r\n        guardarErrorModal(false);\r\n        setModal(false);\r\n\r\n        console.log(\"CAMION\", camionModal);\r\n\r\n        const llenado = marcaFin - marcaIni\r\n        console.log('Resta', llenado);\r\n\r\n        const objGasolina = {\r\n            placa_camion: camionModal[0].placa,\r\n            fecha: Date.now(),\r\n            ruta: camionModal[0].ruta,\r\n            descarga: llenado,\r\n            cedi: usuarioIniciado.cedi,\r\n            tipo: tipo\r\n        }\r\n        console.log(\"GASOLINA\", objGasolina);\r\n\r\n        const rebajoBodega = (superG[0].cap_actual - llenado)\r\n\r\n        console.log(\"BODEGA\", rebajoBodega);\r\n\r\n        const objBodega = {\r\n            cap_actual: (rebajoBodega)\r\n        }\r\n        console.log(\"ACtual\", superG[0].cap_actual);\r\n        console.log(\"rebajado\", objBodega);\r\n\r\n        if(trigger){\r\n            setTriggerApp(true)\r\n            const AgregarCargaGas = async() => {\r\n                const result = await axios.post(`${apiProd}descarga_gasols`, objGasolina)\r\n                if(result.status === 200){\r\n                    console.log(\"DESCARGA\");\r\n                }\r\n                setTrigger(false)\r\n            }\r\n            AgregarCargaGas();\r\n        }\r\n        setTriggerApp(false)\r\n\r\n\r\n        if(triggerBod){\r\n        const EditarBodega = async() => {\r\n            const result =  await axios.patch(`${apiProd}bod_combustibles/${bodegaRef.current}`, objBodega)\r\n            if(result.status === 200){\r\n                Swal.fire(\r\n                    `Se han agredado ${llenado}Lts al camión ${camionModal[0].placa}`,\r\n                        'Se ha ingresado correctamente',\r\n                        'success'\r\n                )\r\n                const bita = await axios.post(`${apiProd}bitacoraTallers`, {\r\n                    idUsuario: usuarioIniciado.id,\r\n                    accion: `Ha ingresado una descarga de combustible el usuario: ${usuarioIniciado.name}`,\r\n                    fecha: Date.now()\r\n                });\r\n                if(bita.status === 200){\r\n                    console.log('se ha agregado a la bitacora');\r\n\r\n                }\r\n            }\r\n            setTriggerBod(false)\r\n            setTriggerApp(true)\r\n\r\n        }\r\n        EditarBodega()\r\n        idCamion.current = parseFloat(camionModal[0].id)\r\n        console.log(\"PREMIOO\", idCamion.current);\r\n        \r\n    }\r\n\r\n    if(triggerCam){\r\n\r\n        console.log(\"CAAAAMION\", camionModal);\r\n\r\n        idCamion.current = parseInt(camionModal[0].id)\r\n        console.log(\"ID CAMION\", idCamion.current)\r\n\r\n        console.log('Kilometraje Inicial', camionModal[0].kmInicial);\r\n\r\n        const limite = (parseInt(camionModal[0].kmInicial) + 11000)\r\n        console.log('LIMITE', limite);\r\n\r\n        const sumado = (parseInt(camionModal[0].kmTotal) + parseInt(kilometraje))\r\n        console.log('SUMADO', sumado);\r\n\r\n        if(sumado < limite) {\r\n            \r\n        const objCamion = {\r\n            kmTotal: sumado,\r\n            cambio: 0\r\n        }\r\n            console.log('No ocupa cambio');\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                        console.log('MENORR');\r\n                    }\r\n            }\r\n            EditarCamion()\r\n        } else{\r\n            const objCamion = {\r\n                kmInicial: sumado,\r\n                kmTotal: sumado,\r\n                cambio: 1\r\n            }\r\n            console.log('Ocupa cambio')\r\n            const EditarCamion = async () => {\r\n                const resultado = await axios.patch(`${apiProd}camions/${idCamion.current}`, objCamion)\r\n                    if(resultado.status === 200){\r\n                       console.log(\"MAYORR\");\r\n                    }\r\n            }\r\n            EditarCamion()\r\n            \r\n        }\r\n    }\r\n    }\r\n    \r\n    const handlePlaca = () => {\r\n\r\n        if(placaModal !== ''){\r\n        console.log(\"PASAAASS\");\r\n                const queryCamion = async () => {\r\n                    const response = await axios.get(`${apiProd}camions/?filter[where][placa]=${placaModal}`)\r\n                    if(response.data.length === 0){\r\n                        Swal.fire(\r\n                            `Placa ${placaModal}, no encontrada`,\r\n                            'Intenta nuevamente',\r\n                            'error',\r\n                        )\r\n                        setCamionModal([])\r\n                    }\r\n                    setCamionModal(response.data)\r\n                }\r\n                queryCamion()\r\n        }else{\r\n            Swal.fire(\r\n                'Espacio Necesario',\r\n                'Intente nuevamente',\r\n                'error',\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        <div class=\"col-md-8 mx-auto\">\r\n            <h1 className=\"mt-4 text-center\">Combustible Super Gas\r\n            </h1>\r\n            {(error) ? <Error mensaje='Campo fecha son obligatorios' /> : null}\r\n            <form className=\"mt-2 mb-2\" onSubmit={recarga}>\r\n                <label className=\"ml-3\">Fecha:</label>\r\n                <div className=\"form-row\">\r\n\r\n                    <div className=\"form-group w-25 ml-3\">\r\n                        <input type=\"date\" className=\"form-control\" name=\"fecha_reparacion\" onChange={e => setFecha(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary ml-3 mr-2 mt-2\" value=\"Consultar Gasto\" />\r\n\r\n                <Button color=\"info\" className=\"mt-2\" onClick={handlerButtonAgregar}>Agregar Gasto</Button>\r\n\r\n                <Button color=\"success\" className=\"mt-2 ml-3\" onClick={handleCisterna}>Cisternas Combustibles</Button>\r\n\r\n                                                    <Modal\r\n                                                        isOpen={modal}\r\n                                                        toggle={toggle}\r\n                                                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                                        centered>\r\n                                                        <ModalHeader toggle={toggle}>Combustible</ModalHeader>\r\n                                                        <ModalBody>\r\n                                                        {(errorModal) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n                                                            <div className=\"form-group w-50\">\r\n                                                                <h6>Placa:</h6>\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                    onChange={e => setPlacaModal(e.target.value)}\r\n                                                                     />\r\n                                                                     <Button className=\"btn btn-success mt-2\" onClick={handlePlaca}>Cargar Camion</Button>\r\n                                                            </div>\r\n\r\n                                                            {(camionModal.length !== 0) ?\r\n                                                                <div className=\"form-group w-50\">\r\n                                                                    <h6>Ruta:</h6>\r\n                                                                    <input\r\n                                                                        id=\"disabledInput\"\r\n                                                                        type=\"text\"\r\n                                                                        className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                        disabled=\"true\"\r\n                                                                        ref={referenciaRuta}\r\n                                                                        defaultValue={camionModal[0].ruta}\r\n                                                                         />\r\n                                                                </div>\r\n                                                                : null}\r\n\r\n                                                                {(camionModal.length !== 0) ?\r\n                                                                    <div className=\"form-group w-50\">\r\n                                                                        <label>Tipo:</label>\r\n                                                                       <select className=\"custom-select\"  onChange={e => setTipo(e.target.value)}>\r\n                                                                       <option value=\"\">Tipo</option>\r\n                                                                       <option value=\"Recope\">Viajes a Recope</option>\r\n                                                                       <option value=\"Aquilados\">Viaje de Alquilados</option>\r\n                                                                       <option value=\"Metalco\">Metalco</option>\r\n                                                                       <option value=\"La Cruz\">La Cruz</option>\r\n                                                                       <option value=\"Carreta Guapiles\">Carreta Guápiles</option>\r\n                                                                       <option value=\"Tanden\">Tanden</option>\r\n                                                                       <option value=\"Carreta Sur\">Carreta Zona Sur</option>\r\n                                                                       <option value=\"Traslados\">Traslados</option>\r\n                                                                       </select>\r\n                                                                    </div>\r\n                                                                    : null}\r\n\r\n                                                                {(camionModal.length !== 0) ?\r\n                                                                    <div className=\"form-group w-50\">\r\n                                                                        <h6>Marca Inicial:</h6>\r\n                                                                        <input\r\n                                                                            type=\"text\"\r\n                                                                            className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                            onChange={e => setMarcaIni(e.target.value)}\r\n                                                                             />\r\n                                                                    </div>\r\n                                                                     : null}\r\n\r\n                                                                     {(camionModal.length !== 0) ?\r\n                                                                        <div className=\"form-group w-50\">\r\n                                                                            <h6>Marca Final:</h6>\r\n                                                                            <input\r\n                                                                                type=\"text\"\r\n                                                                                className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                                onChange={e => setMarcaFin(e.target.value)}\r\n                                                                                 />\r\n                                                                        </div>\r\n                                                                         : null}\r\n\r\n                                                                         {(camionModal.length !== 0) ?\r\n                                                                            <div className=\"form-group w-50\">\r\n                                                                                <h6>Kilometraje:</h6>\r\n                                                                                <input\r\n                                                                                    type=\"text\"\r\n                                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                                    onChange={e => setKilometraje(e.target.value)}\r\n                                                                                     />\r\n                                                                            </div>\r\n                                                                             : null}\r\n\r\n                                                        </ModalBody>\r\n                                                        <ModalFooter>\r\n                                                            <Button color=\"primary\" onClick={handlerButtonIngresar}>Ingresar</Button>{' '}\r\n                                                            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                                                        </ModalFooter>\r\n                                                    </Modal>\r\n                                                    <Modal\r\n                                                        isOpen={modalCisterna}\r\n                                                        toggle1={toggle1}\r\n                                                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                                        centered>\r\n                                                        <ModalHeader toggle1={toggle1}>Recarga Cisterna</ModalHeader>\r\n                                                        <ModalBody>\r\n                                                            <div className=\"form-group w-50\">\r\n                                                                <h6>Código:</h6>\r\n                                                                <input\r\n                                                                    type=\"password\"\r\n                                                                    className=\"form-control mt-3  mr-3 mb-1\"\r\n                                                                    onChange={e => setCodigo(e.target.value)}\r\n                                                                     />\r\n                                                            </div>\r\n                                                        </ModalBody>\r\n                                                        <ModalFooter>\r\n                                                            <Button color=\"primary\" onClick={handleLleno}>Ingresar</Button>{' '}\r\n                                                            <Button color=\"secondary\" onClick={toggle1}>Cancel</Button>\r\n                                                        </ModalFooter>\r\n                                                    </Modal>\r\n\r\n        {(gasolina.length === 0) ?\r\n            <div className=\"alert alert-dismissible alert-light mt-3\">\r\n            <h4 className=\"alert-heading text-center\">No hay Datos</h4>\r\n            <p className=\"mb-0 text-center\">Consulte los datos Primero</p>\r\n            </div>\r\n            :\r\n                <ul className=\"list-group mt-5\">\r\n                {gasolina.map(gaso => (\r\n                <SPLista \r\n                key={gaso.id}\r\n                gaso={gaso}\r\n                usuarioIniciado={usuarioIniciado}\r\n                inicioSesion={inicioSesion}\r\n                />\r\n            ))}\r\n            </ul>\r\n        } \r\n            \r\n            </form>\r\n            </div>\r\n        </Fragment >\r\n        )\r\n}\r\n\r\n\r\nexport default SuperGas","D:\\Desarrollo\\taller\\src\\components\\PesosDimensiones.jsx",[],"D:\\Desarrollo\\taller\\src\\components\\TableAceite.jsx",["156","157","158","159"],"import React, { useState, useEffect } from 'react'\r\n\r\n\r\nfunction Table(props) {\r\n    console.log(props)\r\n    const [header, setHeader] = useState(props.headers)\r\n    const [tableBody, setTableBody] = useState([])\r\n    const [trigger, setTrigger] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (trigger) {\r\n            setTableBody(props.props)\r\n            setTrigger(false)\r\n        }\r\n    })\r\n\r\n    const formatFecha = () => {\r\n        let formatted\r\n        let arrayFechas = []\r\n        \r\n        for (var i=0; i<tableBody.length; i++) {\r\n            \r\n            let date = new Date(tableBody[i].tc)\r\n            console.log(tableBody[i].tc);\r\n            formatted = date.toLocaleString('es-Es')\r\n            tableBody[i].tc= formatted\r\n            console.log('...',date.toLocaleString('es-Es'),tableBody);\r\n        }\r\n        return formatted\r\n    }\r\n    console.log('header', header, 'dataBody', tableBody)\r\n    return (\r\n        <section>\r\n            <div>\r\n                <table className='table mt-4'>\r\n                    <thead>\r\n                        <tr>\r\n                            {header.map(x =>\r\n                                <th>{x}</th>\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableBody.map(x =>\r\n                            <tr>\r\n                                <td>\r\n                                    {x.placa}\r\n                                </td>\r\n                                <td>\r\n                                    {x.marca}\r\n                                </td>\r\n                                <td>\r\n                                    {x.kmInicial}\r\n                                </td>\r\n                                <td>\r\n                                    {x.kmTotal}\r\n                                </td>\r\n                                <td>\r\n                                    {x.kmTotal - x.kmInicial}\r\n                                </td>\r\n                                <td>\r\n                                    {x.tc}\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\nexport default Table\r\n","D:\\Desarrollo\\taller\\src\\components\\CambioALista.jsx",[],"D:\\Desarrollo\\taller\\src\\pages\\Error.jsx",[],"D:\\Desarrollo\\taller\\src\\components\\ReparacionLista.jsx",["160","161","162","163"],"D:\\Desarrollo\\taller\\src\\components\\GasTomzaLista.jsx",[],"D:\\Desarrollo\\taller\\src\\components\\SuperGasLista.jsx",[],"D:\\Desarrollo\\taller\\src\\components\\MantenimientoLista.jsx",["164"],"import React,{useState} from 'react'\r\n\r\n\r\nfunction CamionLista({camion,inicioSesion,usuarioIniciado} ){\r\n\r\n\r\n//     var cadena = camion.placa;\r\n//     console.log(\"QUEEE\", cadena);\r\n//     var ultimo = cadena.charAt(cadena.length -1)\r\n//     console.log(\"ULTIMOO\", ultimo);\r\n\r\n//     const placa1y7 = 'Enero y Julio'\r\n//     const placa2y8 = 'Febrero y Agosto'\r\n//     const placa3y9 = 'Marzo y Setiembre'\r\n//     const placa4 = 'Abril y Octubre'\r\n//     const placa5y0 = 'Mayo y Noviembre'\r\n\r\n//     if(camion.length !== 0){\r\n//         setTrigger(true)\r\n//     }\r\n//     if(trigger){\r\n//     if(ultimo === '1' ){\r\n//     setRtv(placa1y7)\r\n//     setTrigger(false)\r\n//     }\r\n// }\r\n    // if(ultimo === 2 && ultimo === 8){\r\n    //     setRtv('Febrero y Agosto')\r\n    // }\r\n    // if(ultimo === 3 && ultimo === 9){\r\n    //     setRtv('Marzo y Setiembre')\r\n    // }\r\n    // if(ultimo === 4){\r\n    //     setRtv('Abril y Octubre')\r\n    // }\r\n    // if(ultimo === 5 && ultimo === 0){\r\n    //     setRtv('Mayo y Noviembre')\r\n    // }\r\n\r\n\r\n    return(\r\n\r\n        <li className=\"list-group-item d-flex justify-content-between align-item-center\" data-categoria={camion.unidad_negocio}>\r\n            <p>\r\n                <span className=\"font-weight-bold text-warning\">Camion: {camion.marca}{' '}</span><br></br>\r\n                <span className=\"font-weight-bold\">  Placa: {camion.placa}</span><br></br>\r\n                {/*<span className=\"font-weight-bold\">  Ruta: {camion.ruta}</span><br></br>*/}\r\n                <span className=\"font-weight-bold\">  Unidad de Negocio: {camion.unidad_negocio}</span><br></br>\r\n                <span className=\"font-weight-bold\">  RTV: {camion.rtv}</span><br></br>\r\n                <span className=\"font-weight-bold\">  TC: {camion.tc}</span><br></br>\r\n            </p>\r\n            \r\n        </li>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default CamionLista;\r\n\r\n//{`/choferes/editar/${camion.id}`}","D:\\Desarrollo\\taller\\src\\components\\Table.jsx",["165","166"],"D:\\Desarrollo\\taller\\src\\components\\TableCambio.jsx",["167","168"],"import React, { useState, useEffect } from 'react'\r\n\r\nfunction Table(props) {\r\n    console.log(props)\r\n    const [header, setHeader] = useState(props.headers)\r\n    const [tableBody, setTableBody] = useState([])\r\n    const [trigger, setTrigger] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        if (trigger) {\r\n            setTableBody(props.props)\r\n            setTrigger(false)\r\n        }\r\n    })\r\n\r\n     console.log('header', header, 'dataBody', tableBody)\r\n    return (\r\n        <section>\r\n            <div>\r\n                <table className='table mt-4'>\r\n                    <thead>\r\n                        <tr>\r\n                            {header.map(x =>\r\n                                <th>{x}</th>\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableBody.map(x =>\r\n                            <tr>\r\n                                <td>\r\n                                    {x.placa}\r\n                                </td>\r\n                                <td>\r\n                                    {x.kmInicial}\r\n                                </td>\r\n                                <td>\r\n                                    {x.kmTotal - x.kmInicial}\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\nexport default Table\r\n",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":21,"column":8,"nodeType":"175","messageId":"176","endLine":21,"endColumn":13},{"ruleId":"177","severity":1,"message":"178","line":49,"column":6,"nodeType":"179","endLine":49,"endColumn":18,"suggestions":"180"},{"ruleId":"173","severity":1,"message":"181","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":16},{"ruleId":"173","severity":1,"message":"182","line":3,"column":18,"nodeType":"175","messageId":"176","endLine":3,"endColumn":23},{"ruleId":"173","severity":1,"message":"183","line":3,"column":25,"nodeType":"175","messageId":"176","endLine":3,"endColumn":36},{"ruleId":"173","severity":1,"message":"184","line":3,"column":38,"nodeType":"175","messageId":"176","endLine":3,"endColumn":47},{"ruleId":"173","severity":1,"message":"185","line":3,"column":49,"nodeType":"175","messageId":"176","endLine":3,"endColumn":60},{"ruleId":"173","severity":1,"message":"186","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":20},{"ruleId":"173","severity":1,"message":"187","line":16,"column":25,"nodeType":"175","messageId":"176","endLine":16,"endColumn":39},{"ruleId":"173","severity":1,"message":"188","line":17,"column":12,"nodeType":"175","messageId":"176","endLine":17,"endColumn":22},{"ruleId":"173","severity":1,"message":"189","line":17,"column":24,"nodeType":"175","messageId":"176","endLine":17,"endColumn":37},{"ruleId":"173","severity":1,"message":"190","line":19,"column":19,"nodeType":"175","messageId":"176","endLine":19,"endColumn":31},{"ruleId":"173","severity":1,"message":"191","line":20,"column":12,"nodeType":"175","messageId":"176","endLine":20,"endColumn":22},{"ruleId":"173","severity":1,"message":"192","line":20,"column":24,"nodeType":"175","messageId":"176","endLine":20,"endColumn":41},{"ruleId":"173","severity":1,"message":"193","line":22,"column":12,"nodeType":"175","messageId":"176","endLine":22,"endColumn":18},{"ruleId":"173","severity":1,"message":"194","line":22,"column":20,"nodeType":"175","messageId":"176","endLine":22,"endColumn":34},{"ruleId":"173","severity":1,"message":"195","line":33,"column":11,"nodeType":"175","messageId":"176","endLine":33,"endColumn":25},{"ruleId":"173","severity":1,"message":"196","line":37,"column":11,"nodeType":"175","messageId":"176","endLine":37,"endColumn":31},{"ruleId":"173","severity":1,"message":"197","line":43,"column":11,"nodeType":"175","messageId":"176","endLine":43,"endColumn":32},{"ruleId":"173","severity":1,"message":"198","line":123,"column":9,"nodeType":"175","messageId":"176","endLine":123,"endColumn":18},{"ruleId":"173","severity":1,"message":"199","line":126,"column":11,"nodeType":"175","messageId":"176","endLine":126,"endColumn":17},{"ruleId":"173","severity":1,"message":"200","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"201","line":53,"column":5,"nodeType":"175","endLine":53,"endColumn":14,"suggestions":"202"},{"ruleId":"173","severity":1,"message":"203","line":28,"column":12,"nodeType":"175","messageId":"176","endLine":28,"endColumn":17},{"ruleId":"173","severity":1,"message":"204","line":30,"column":12,"nodeType":"175","messageId":"176","endLine":30,"endColumn":18},{"ruleId":"177","severity":1,"message":"205","line":63,"column":9,"nodeType":"175","endLine":63,"endColumn":18,"suggestions":"206"},{"ruleId":"177","severity":1,"message":"207","line":102,"column":5,"nodeType":"175","endLine":102,"endColumn":14,"suggestions":"208"},{"ruleId":"177","severity":1,"message":"209","line":120,"column":5,"nodeType":"175","endLine":120,"endColumn":14,"suggestions":"210"},{"ruleId":"177","severity":1,"message":"211","line":37,"column":8,"nodeType":"179","endLine":37,"endColumn":26,"suggestions":"212"},{"ruleId":"173","severity":1,"message":"213","line":42,"column":23,"nodeType":"175","messageId":"176","endLine":42,"endColumn":32},{"ruleId":"173","severity":1,"message":"214","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":13},{"ruleId":"173","severity":1,"message":"215","line":2,"column":17,"nodeType":"175","messageId":"176","endLine":2,"endColumn":25},{"ruleId":"173","severity":1,"message":"216","line":2,"column":37,"nodeType":"175","messageId":"176","endLine":2,"endColumn":46},{"ruleId":"173","severity":1,"message":"217","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":19},{"ruleId":"173","severity":1,"message":"218","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":19},{"ruleId":"173","severity":1,"message":"219","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":13},{"ruleId":"173","severity":1,"message":"200","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"201","line":59,"column":5,"nodeType":"175","endLine":59,"endColumn":14,"suggestions":"220"},{"ruleId":"173","severity":1,"message":"221","line":6,"column":20,"nodeType":"175","messageId":"176","endLine":6,"endColumn":29},{"ruleId":"177","severity":1,"message":"222","line":10,"column":5,"nodeType":"175","endLine":10,"endColumn":14,"suggestions":"223"},{"ruleId":"173","severity":1,"message":"224","line":17,"column":11,"nodeType":"175","messageId":"176","endLine":17,"endColumn":22},{"ruleId":"173","severity":1,"message":"225","line":19,"column":13,"nodeType":"175","messageId":"176","endLine":19,"endColumn":24},{"ruleId":"173","severity":1,"message":"226","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":16},{"ruleId":"173","severity":1,"message":"204","line":18,"column":12,"nodeType":"175","messageId":"176","endLine":18,"endColumn":18},{"ruleId":"173","severity":1,"message":"227","line":95,"column":11,"nodeType":"175","messageId":"176","endLine":95,"endColumn":28},{"ruleId":"173","severity":1,"message":"228","line":99,"column":11,"nodeType":"175","messageId":"176","endLine":99,"endColumn":25},{"ruleId":"173","severity":1,"message":"215","line":1,"column":15,"nodeType":"175","messageId":"176","endLine":1,"endColumn":23},{"ruleId":"173","severity":1,"message":"221","line":5,"column":20,"nodeType":"175","messageId":"176","endLine":5,"endColumn":29},{"ruleId":"177","severity":1,"message":"229","line":9,"column":5,"nodeType":"175","endLine":9,"endColumn":14,"suggestions":"230"},{"ruleId":"173","severity":1,"message":"221","line":5,"column":20,"nodeType":"175","messageId":"176","endLine":5,"endColumn":29},{"ruleId":"177","severity":1,"message":"222","line":9,"column":5,"nodeType":"175","endLine":9,"endColumn":14,"suggestions":"231"},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'Style' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiProd'. Either include it or remove the dependency array.","ArrayExpression",["234"],"'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'CambioALista' is defined but never used.","'setKilometraje' is assigned a value but never used.","'placaModal' is assigned a value but never used.","'setPlacaModal' is assigned a value but never used.","'guardarError' is assigned a value but never used.","'errorModal' is assigned a value but never used.","'guardarErrorModal' is assigned a value but never used.","'cambio' is assigned a value but never used.","'guardarCambios' is assigned a value but never used.","'referenciaRuta' is assigned a value but never used.","'handlerButtonAgregar' is assigned a value but never used.","'handlerButtonIngresar' is assigned a value but never used.","'className' is assigned a value but never used.","'toggle' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect contains a call to 'setTriggerGas'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [triggerGas, fecha, apiProd, gasolina.length] as a second argument to the useEffect Hook.",["235"],"'error' is assigned a value but never used.","'fecha1' is assigned a value but never used.","React Hook useEffect contains a call to 'setTriggerPlacaFecha'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [triggerPlacaFecha, triggerFecha, triggerPlaca, apiProd, fecha, placa, reparaciones] as a second argument to the useEffect Hook.",["236"],"React Hook useEffect contains a call to 'setTrigger'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [trigger, apiProd] as a second argument to the useEffect Hook.",["237"],"React Hook useEffect contains a call to 'guardarError'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [triggerA, fecha, placa, apiProd] as a second argument to the useEffect Hook.",["238"],"React Hook useEffect has a missing dependency: 'rtv'. Either include it or remove the dependency array.",["239"],"'usuarioID' is assigned a value but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'environment' is defined but never used.","'CamionLista' is defined but never used.","'Error' is defined but never used.",["240"],"'setHeader' is assigned a value but never used.","React Hook useEffect contains a call to 'setTableBody'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [trigger, props.props] as a second argument to the useEffect Hook.",["241"],"'formatFecha' is assigned a value but never used.","'arrayFechas' is assigned a value but never used.","'TableMod' is defined but never used.","'reparacionHeaders' is assigned a value but never used.","'reparacionBody' is assigned a value but never used.","React Hook useEffect contains a call to 'setTableBody'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [trigger, props.dataBody] as a second argument to the useEffect Hook.",["242"],["243"],"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"246","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"257","fix":"261"},"Update the dependencies array to be: [apiProd, triggerApp]",{"range":"262","text":"263"},"Add dependencies array: [triggerGas, fecha, apiProd, gasolina.length]",{"range":"264","text":"265"},"Add dependencies array: [triggerPlacaFecha, triggerFecha, triggerPlaca, apiProd, fecha, placa, reparaciones]",{"range":"266","text":"267"},"Add dependencies array: [trigger, apiProd]",{"range":"268","text":"269"},"Add dependencies array: [triggerA, fecha, placa, apiProd]",{"range":"270","text":"271"},"Update the dependencies array to be: [trigger, apiProd, rtv]",{"range":"272","text":"273"},{"range":"274","text":"265"},"Add dependencies array: [trigger, props.props]",{"range":"275","text":"276"},"Add dependencies array: [trigger, props.dataBody]",{"range":"277","text":"278"},{"range":"279","text":"276"},[1847,1859],"[apiProd, triggerApp]",[2449,2449],", [triggerGas, fecha, apiProd, gasolina.length]",[3491,3491],", [triggerPlacaFecha, triggerFecha, triggerPlaca, apiProd, fecha, placa, reparaciones]",[4016,4016],", [trigger, apiProd]",[4690,4690],", [triggerA, fecha, placa, apiProd]",[1133,1151],"[trigger, apiProd, rtv]",[2588,2588],[399,399],", [trigger, props.props]",[407,407],", [trigger, props.dataBody]",[401,401]]